Terminals unused in grammar

    REPEAT
    UNTIL
    NULL_STATEMENT
    LOWER_THAN_ELSE
    LOWER_THAN_REDUCE


State 30 conflicts: 2 shift/reduce
State 49 conflicts: 13 reduce/reduce
State 120 conflicts: 1 reduce/reduce


Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';'

    3 optional_variable: variable optional_variable
    4                  | ε

    5 variable: IDENTIFIER
    6         | IDENTIFIER ':' type ASSIGNMENT primary ';'
    7         | IDENTIFIER ASSIGNMENT expression
    8         | IDENTIFIER ':' type IS statement ';'

    9 parameters: ε
   10           | parameters_list

   11 parameters_list: parameters_list ',' IDENTIFIER ':' type
   12                | IDENTIFIER ':' type

   13 type: INTEGER
   14     | BOOLEAN
   15     | REAL

   16 body: BEGIN_ statement_ END ';'

   17 expression: expression OROP relation
   18           | expression ANDOP relation
   19           | NOTOP relation
   20           | relation

   21 relation: relation RELOP term
   22         | term

   23 term: term ADDOP factor
   24     | term MULOP factor
   25     | term REMOP factor
   26     | factor

   27 factor: factor MULOP primary
   28       | factor REMOP primary
   29       | primary

   30 primary: '(' expression ')'
   31        | INT_LITERAL
   32        | REAL_LITERAL
   33        | BOOL_LITERAL
   34        | primary EXP primary
   35        | ADDOP primary
   36        | NOTOP primary
   37        | IDENTIFIER

   38 operator: ADDOP
   39         | MULOP
   40         | RELOP
   41         | ANDOP
   42         | OROP
   43         | NOTOP
   44         | REMOP
   45         | EXP

   46 reductions: reductions statement_
   47           | ε

   48 case_list: WHEN INT_LITERAL ARROW statement_ case_list
   49          | CASE expression WHEN statement_ ARROW statement_
   50          | CASE expression WHEN statement_ ARROW statement_ case_list
   51          | ε

   52 statement_: statement ';'
   53           | error ';'

   54 statement: expression
   55          | REDUCE operator reductions ENDREDUCE
   56          | IF expression THEN statement_ ENDIF
   57          | IF expression THEN statement_ ELSE statement_ ENDIF
   58          | CASE expression IS case_list OTHERWISE ARROW statement_ ENDCASE


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 30
    ')' (41) 30
    ',' (44) 11
    ':' (58) 6 8 11 12
    ';' (59) 2 6 8 16 52 53
    error (256) 53
    IDENTIFIER <iden> (258) 2 5 6 7 8 11 12 37
    INT_LITERAL <type> (259) 31 48
    REAL_LITERAL <type> (260) 32
    BOOL_LITERAL <type> (261) 33
    ADDOP <oper> (262) 23 35 38
    MULOP <oper> (263) 24 27 39
    RELOP <oper> (264) 21 40
    ANDOP <oper> (265) 18 41
    OROP <oper> (266) 17 42
    NOTOP <oper> (267) 19 36 43
    REMOP <oper> (268) 25 28 44
    EXP <oper> (269) 34 45
    IS (270) 8 58
    BEGIN_ (271) 16
    BOOLEAN (272) 14
    END (273) 16
    ENDREDUCE (274) 55
    FUNCTION (275) 2
    INTEGER (276) 13
    REAL (277) 15
    REDUCE (278) 55
    RETURNS (279) 2
    ASSIGNMENT (280) 6 7
    IF (281) 56 57
    THEN (282) 56 57
    ELSE (283) 57
    ENDIF (284) 56 57
    CASE <type> (285) 49 50 58
    WHEN <type> (286) 48 49 50
    ARROW <type> (287) 48 49 50 58
    OTHERWISE <type> (288) 58
    ENDCASE (289) 58
    REPEAT (290)
    UNTIL (291)
    NULL_STATEMENT (292)
    LOWER_THAN_ELSE (293)
    LOWER_THAN_REDUCE (294)


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    function (46)
        on left: 1
        on right: 0
    function_header (47)
        on left: 2
        on right: 1
    optional_variable (48)
        on left: 3 4
        on right: 1 3
    variable <type> (49)
        on left: 5 6 7 8
        on right: 3
    parameters (50)
        on left: 9 10
        on right: 2
    parameters_list (51)
        on left: 11 12
        on right: 10 11
    type <type> (52)
        on left: 13 14 15
        on right: 2 6 8 11 12
    body <type> (53)
        on left: 16
        on right: 1
    expression <type> (54)
        on left: 17 18 19 20
        on right: 7 17 18 30 49 50 54 56 57 58
    relation <type> (55)
        on left: 21 22
        on right: 17 18 19 20 21
    term <type> (56)
        on left: 23 24 25 26
        on right: 21 22 23 24 25
    factor <type> (57)
        on left: 27 28 29
        on right: 23 24 25 26 27 28
    primary <type> (58)
        on left: 30 31 32 33 34 35 36 37
        on right: 6 27 28 29 34 35 36
    operator <oper> (59)
        on left: 38 39 40 41 42 43 44 45
        on right: 55
    reductions <type> (60)
        on left: 46 47
        on right: 46 55
    case_list <type> (61)
        on left: 48 49 50 51
        on right: 48 50 58
    statement_ <type> (62)
        on left: 52 53
        on right: 16 46 48 49 50 56 57 58
    statement <type> (63)
        on left: 54 55 56 57 58
        on right: 8 52


State 0

    0 $accept: • function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    2 function_header: FUNCTION • IDENTIFIER parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function • $end

    $end  shift, and go to state 5


State 3

    1 function: function_header • optional_variable body

    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 4 (optional_variable)

    optional_variable  go to state 7
    variable           go to state 8


State 4

    2 function_header: FUNCTION IDENTIFIER • parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 9

    $default  reduce using rule 9 (parameters)

    parameters       go to state 10
    parameters_list  go to state 11


State 5

    0 $accept: function $end •

    $default  accept


State 6

    5 variable: IDENTIFIER •
    6         | IDENTIFIER • ':' type ASSIGNMENT primary ';'
    7         | IDENTIFIER • ASSIGNMENT expression
    8         | IDENTIFIER • ':' type IS statement ';'

    ASSIGNMENT  shift, and go to state 12
    ':'         shift, and go to state 13

    $default  reduce using rule 5 (variable)


State 7

    1 function: function_header optional_variable • body

    BEGIN_  shift, and go to state 14

    body  go to state 15


State 8

    3 optional_variable: variable • optional_variable

    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 4 (optional_variable)

    optional_variable  go to state 16
    variable           go to state 8


State 9

   12 parameters_list: IDENTIFIER • ':' type

    ':'  shift, and go to state 17


State 10

    2 function_header: FUNCTION IDENTIFIER parameters • RETURNS type ';'

    RETURNS  shift, and go to state 18


State 11

   10 parameters: parameters_list •
   11 parameters_list: parameters_list • ',' IDENTIFIER ':' type

    ','  shift, and go to state 19

    $default  reduce using rule 10 (parameters)


State 12

    7 variable: IDENTIFIER ASSIGNMENT • expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    ADDOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 26

    expression  go to state 27
    relation    go to state 28
    term        go to state 29
    factor      go to state 30
    primary     go to state 31


State 13

    6 variable: IDENTIFIER ':' • type ASSIGNMENT primary ';'
    8         | IDENTIFIER ':' • type IS statement ';'

    BOOLEAN  shift, and go to state 32
    INTEGER  shift, and go to state 33
    REAL     shift, and go to state 34

    type  go to state 35


State 14

   16 body: BEGIN_ • statement_ END ';'

    error         shift, and go to state 36
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    ADDOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    REDUCE        shift, and go to state 37
    IF            shift, and go to state 38
    CASE          shift, and go to state 39
    '('           shift, and go to state 26

    expression  go to state 40
    relation    go to state 28
    term        go to state 29
    factor      go to state 30
    primary     go to state 31
    statement_  go to state 41
    statement   go to state 42


State 15

    1 function: function_header optional_variable body •

    $default  reduce using rule 1 (function)


State 16

    3 optional_variable: variable optional_variable •

    $default  reduce using rule 3 (optional_variable)


State 17

   12 parameters_list: IDENTIFIER ':' • type

    BOOLEAN  shift, and go to state 32
    INTEGER  shift, and go to state 33
    REAL     shift, and go to state 34

    type  go to state 43


State 18

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS • type ';'

    BOOLEAN  shift, and go to state 32
    INTEGER  shift, and go to state 33
    REAL     shift, and go to state 34

    type  go to state 44


State 19

   11 parameters_list: parameters_list ',' • IDENTIFIER ':' type

    IDENTIFIER  shift, and go to state 45


State 20

   37 primary: IDENTIFIER •

    $default  reduce using rule 37 (primary)


State 21

   31 primary: INT_LITERAL •

    $default  reduce using rule 31 (primary)


State 22

   32 primary: REAL_LITERAL •

    $default  reduce using rule 32 (primary)


State 23

   33 primary: BOOL_LITERAL •

    $default  reduce using rule 33 (primary)


State 24

   35 primary: ADDOP • primary

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    ADDOP         shift, and go to state 24
    NOTOP         shift, and go to state 46
    '('           shift, and go to state 26

    primary  go to state 47


State 25

   19 expression: NOTOP • relation
   36 primary: NOTOP • primary

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    ADDOP         shift, and go to state 24
    NOTOP         shift, and go to state 46
    '('           shift, and go to state 26

    relation  go to state 48
    term      go to state 29
    factor    go to state 30
    primary   go to state 49


State 26

   30 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    ADDOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 26

    expression  go to state 50
    relation    go to state 28
    term        go to state 29
    factor      go to state 30
    primary     go to state 31


State 27

    7 variable: IDENTIFIER ASSIGNMENT expression •
   17 expression: expression • OROP relation
   18           | expression • ANDOP relation

    ANDOP  shift, and go to state 51
    OROP   shift, and go to state 52

    $default  reduce using rule 7 (variable)


State 28

   20 expression: relation •
   21 relation: relation • RELOP term

    RELOP  shift, and go to state 53

    $default  reduce using rule 20 (expression)


State 29

   22 relation: term •
   23 term: term • ADDOP factor
   24     | term • MULOP factor
   25     | term • REMOP factor

    ADDOP  shift, and go to state 54
    MULOP  shift, and go to state 55
    REMOP  shift, and go to state 56

    $default  reduce using rule 22 (relation)


State 30

   26 term: factor •
   27 factor: factor • MULOP primary
   28       | factor • REMOP primary

    MULOP  shift, and go to state 57
    REMOP  shift, and go to state 58

    MULOP     [reduce using rule 26 (term)]
    REMOP     [reduce using rule 26 (term)]
    $default  reduce using rule 26 (term)


State 31

   29 factor: primary •
   34 primary: primary • EXP primary

    EXP  shift, and go to state 59

    $default  reduce using rule 29 (factor)


State 32

   14 type: BOOLEAN •

    $default  reduce using rule 14 (type)


State 33

   13 type: INTEGER •

    $default  reduce using rule 13 (type)


State 34

   15 type: REAL •

    $default  reduce using rule 15 (type)


State 35

    6 variable: IDENTIFIER ':' type • ASSIGNMENT primary ';'
    8         | IDENTIFIER ':' type • IS statement ';'

    IS          shift, and go to state 60
    ASSIGNMENT  shift, and go to state 61


State 36

   53 statement_: error • ';'

    ';'  shift, and go to state 62


State 37

   55 statement: REDUCE • operator reductions ENDREDUCE

    ADDOP  shift, and go to state 63
    MULOP  shift, and go to state 64
    RELOP  shift, and go to state 65
    ANDOP  shift, and go to state 66
    OROP   shift, and go to state 67
    NOTOP  shift, and go to state 68
    REMOP  shift, and go to state 69
    EXP    shift, and go to state 70

    operator  go to state 71


State 38

   56 statement: IF • expression THEN statement_ ENDIF
   57          | IF • expression THEN statement_ ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    ADDOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 26

    expression  go to state 72
    relation    go to state 28
    term        go to state 29
    factor      go to state 30
    primary     go to state 31


State 39

   58 statement: CASE • expression IS case_list OTHERWISE ARROW statement_ ENDCASE

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    ADDOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 26

    expression  go to state 73
    relation    go to state 28
    term        go to state 29
    factor      go to state 30
    primary     go to state 31


State 40

   17 expression: expression • OROP relation
   18           | expression • ANDOP relation
   54 statement: expression •

    ANDOP  shift, and go to state 51
    OROP   shift, and go to state 52

    $default  reduce using rule 54 (statement)


State 41

   16 body: BEGIN_ statement_ • END ';'

    END  shift, and go to state 74


State 42

   52 statement_: statement • ';'

    ';'  shift, and go to state 75


State 43

   12 parameters_list: IDENTIFIER ':' type •

    $default  reduce using rule 12 (parameters_list)


State 44

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type • ';'

    ';'  shift, and go to state 76


State 45

   11 parameters_list: parameters_list ',' IDENTIFIER • ':' type

    ':'  shift, and go to state 77


State 46

   36 primary: NOTOP • primary

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    ADDOP         shift, and go to state 24
    NOTOP         shift, and go to state 46
    '('           shift, and go to state 26

    primary  go to state 78


State 47

   34 primary: primary • EXP primary
   35        | ADDOP primary •

    EXP  shift, and go to state 59

    $default  reduce using rule 35 (primary)


State 48

   19 expression: NOTOP relation •
   21 relation: relation • RELOP term

    RELOP  shift, and go to state 53

    $default  reduce using rule 19 (expression)


State 49

   29 factor: primary •
   34 primary: primary • EXP primary
   36        | NOTOP primary •

    EXP  shift, and go to state 59

    IDENTIFIER  reduce using rule 29 (factor)
    IDENTIFIER  [reduce using rule 36 (primary)]
    ADDOP       reduce using rule 29 (factor)
    ADDOP       [reduce using rule 36 (primary)]
    MULOP       reduce using rule 29 (factor)
    MULOP       [reduce using rule 36 (primary)]
    RELOP       reduce using rule 29 (factor)
    RELOP       [reduce using rule 36 (primary)]
    ANDOP       reduce using rule 29 (factor)
    ANDOP       [reduce using rule 36 (primary)]
    OROP        reduce using rule 29 (factor)
    OROP        [reduce using rule 36 (primary)]
    REMOP       reduce using rule 29 (factor)
    REMOP       [reduce using rule 36 (primary)]
    IS          reduce using rule 29 (factor)
    IS          [reduce using rule 36 (primary)]
    BEGIN_      reduce using rule 29 (factor)
    BEGIN_      [reduce using rule 36 (primary)]
    THEN        reduce using rule 29 (factor)
    THEN        [reduce using rule 36 (primary)]
    WHEN        reduce using rule 29 (factor)
    WHEN        [reduce using rule 36 (primary)]
    ';'         reduce using rule 29 (factor)
    ';'         [reduce using rule 36 (primary)]
    ')'         reduce using rule 29 (factor)
    ')'         [reduce using rule 36 (primary)]
    $default    reduce using rule 29 (factor)


State 50

   17 expression: expression • OROP relation
   18           | expression • ANDOP relation
   30 primary: '(' expression • ')'

    ANDOP  shift, and go to state 51
    OROP   shift, and go to state 52
    ')'    shift, and go to state 79


State 51

   18 expression: expression ANDOP • relation

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    ADDOP         shift, and go to state 24
    NOTOP         shift, and go to state 46
    '('           shift, and go to state 26

    relation  go to state 80
    term      go to state 29
    factor    go to state 30
    primary   go to state 31


State 52

   17 expression: expression OROP • relation

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    ADDOP         shift, and go to state 24
    NOTOP         shift, and go to state 46
    '('           shift, and go to state 26

    relation  go to state 81
    term      go to state 29
    factor    go to state 30
    primary   go to state 31


State 53

   21 relation: relation RELOP • term

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    ADDOP         shift, and go to state 24
    NOTOP         shift, and go to state 46
    '('           shift, and go to state 26

    term     go to state 82
    factor   go to state 30
    primary  go to state 31


State 54

   23 term: term ADDOP • factor

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    ADDOP         shift, and go to state 24
    NOTOP         shift, and go to state 46
    '('           shift, and go to state 26

    factor   go to state 83
    primary  go to state 31


State 55

   24 term: term MULOP • factor

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    ADDOP         shift, and go to state 24
    NOTOP         shift, and go to state 46
    '('           shift, and go to state 26

    factor   go to state 84
    primary  go to state 31


State 56

   25 term: term REMOP • factor

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    ADDOP         shift, and go to state 24
    NOTOP         shift, and go to state 46
    '('           shift, and go to state 26

    factor   go to state 85
    primary  go to state 31


State 57

   27 factor: factor MULOP • primary

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    ADDOP         shift, and go to state 24
    NOTOP         shift, and go to state 46
    '('           shift, and go to state 26

    primary  go to state 86


State 58

   28 factor: factor REMOP • primary

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    ADDOP         shift, and go to state 24
    NOTOP         shift, and go to state 46
    '('           shift, and go to state 26

    primary  go to state 87


State 59

   34 primary: primary EXP • primary

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    ADDOP         shift, and go to state 24
    NOTOP         shift, and go to state 46
    '('           shift, and go to state 26

    primary  go to state 88


State 60

    8 variable: IDENTIFIER ':' type IS • statement ';'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    ADDOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    REDUCE        shift, and go to state 37
    IF            shift, and go to state 38
    CASE          shift, and go to state 39
    '('           shift, and go to state 26

    expression  go to state 40
    relation    go to state 28
    term        go to state 29
    factor      go to state 30
    primary     go to state 31
    statement   go to state 89


State 61

    6 variable: IDENTIFIER ':' type ASSIGNMENT • primary ';'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    ADDOP         shift, and go to state 24
    NOTOP         shift, and go to state 46
    '('           shift, and go to state 26

    primary  go to state 90


State 62

   53 statement_: error ';' •

    $default  reduce using rule 53 (statement_)


State 63

   38 operator: ADDOP •

    $default  reduce using rule 38 (operator)


State 64

   39 operator: MULOP •

    $default  reduce using rule 39 (operator)


State 65

   40 operator: RELOP •

    $default  reduce using rule 40 (operator)


State 66

   41 operator: ANDOP •

    $default  reduce using rule 41 (operator)


State 67

   42 operator: OROP •

    $default  reduce using rule 42 (operator)


State 68

   43 operator: NOTOP •

    $default  reduce using rule 43 (operator)


State 69

   44 operator: REMOP •

    $default  reduce using rule 44 (operator)


State 70

   45 operator: EXP •

    $default  reduce using rule 45 (operator)


State 71

   55 statement: REDUCE operator • reductions ENDREDUCE

    $default  reduce using rule 47 (reductions)

    reductions  go to state 91


State 72

   17 expression: expression • OROP relation
   18           | expression • ANDOP relation
   56 statement: IF expression • THEN statement_ ENDIF
   57          | IF expression • THEN statement_ ELSE statement_ ENDIF

    ANDOP  shift, and go to state 51
    OROP   shift, and go to state 52
    THEN   shift, and go to state 92


State 73

   17 expression: expression • OROP relation
   18           | expression • ANDOP relation
   58 statement: CASE expression • IS case_list OTHERWISE ARROW statement_ ENDCASE

    ANDOP  shift, and go to state 51
    OROP   shift, and go to state 52
    IS     shift, and go to state 93


State 74

   16 body: BEGIN_ statement_ END • ';'

    ';'  shift, and go to state 94


State 75

   52 statement_: statement ';' •

    $default  reduce using rule 52 (statement_)


State 76

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 77

   11 parameters_list: parameters_list ',' IDENTIFIER ':' • type

    BOOLEAN  shift, and go to state 32
    INTEGER  shift, and go to state 33
    REAL     shift, and go to state 34

    type  go to state 95


State 78

   34 primary: primary • EXP primary
   36        | NOTOP primary •

    EXP  shift, and go to state 59

    $default  reduce using rule 36 (primary)


State 79

   30 primary: '(' expression ')' •

    $default  reduce using rule 30 (primary)


State 80

   18 expression: expression ANDOP relation •
   21 relation: relation • RELOP term

    RELOP  shift, and go to state 53

    $default  reduce using rule 18 (expression)


State 81

   17 expression: expression OROP relation •
   21 relation: relation • RELOP term

    RELOP  shift, and go to state 53

    $default  reduce using rule 17 (expression)


State 82

   21 relation: relation RELOP term •
   23 term: term • ADDOP factor
   24     | term • MULOP factor
   25     | term • REMOP factor

    ADDOP  shift, and go to state 54
    MULOP  shift, and go to state 55
    REMOP  shift, and go to state 56

    $default  reduce using rule 21 (relation)


State 83

   23 term: term ADDOP factor •
   27 factor: factor • MULOP primary
   28       | factor • REMOP primary

    MULOP  shift, and go to state 57
    REMOP  shift, and go to state 58

    $default  reduce using rule 23 (term)


State 84

   24 term: term MULOP factor •
   27 factor: factor • MULOP primary
   28       | factor • REMOP primary

    REMOP  shift, and go to state 58

    $default  reduce using rule 24 (term)


State 85

   25 term: term REMOP factor •
   27 factor: factor • MULOP primary
   28       | factor • REMOP primary

    $default  reduce using rule 25 (term)


State 86

   27 factor: factor MULOP primary •
   34 primary: primary • EXP primary

    EXP  shift, and go to state 59

    $default  reduce using rule 27 (factor)


State 87

   28 factor: factor REMOP primary •
   34 primary: primary • EXP primary

    EXP  shift, and go to state 59

    $default  reduce using rule 28 (factor)


State 88

   34 primary: primary • EXP primary
   34        | primary EXP primary •

    EXP  shift, and go to state 59

    $default  reduce using rule 34 (primary)


State 89

    8 variable: IDENTIFIER ':' type IS statement • ';'

    ';'  shift, and go to state 96


State 90

    6 variable: IDENTIFIER ':' type ASSIGNMENT primary • ';'
   34 primary: primary • EXP primary

    EXP  shift, and go to state 59
    ';'  shift, and go to state 97


State 91

   46 reductions: reductions • statement_
   55 statement: REDUCE operator reductions • ENDREDUCE

    error         shift, and go to state 36
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    ADDOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    ENDREDUCE     shift, and go to state 98
    REDUCE        shift, and go to state 37
    IF            shift, and go to state 38
    CASE          shift, and go to state 39
    '('           shift, and go to state 26

    expression  go to state 40
    relation    go to state 28
    term        go to state 29
    factor      go to state 30
    primary     go to state 31
    statement_  go to state 99
    statement   go to state 42


State 92

   56 statement: IF expression THEN • statement_ ENDIF
   57          | IF expression THEN • statement_ ELSE statement_ ENDIF

    error         shift, and go to state 36
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    ADDOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    REDUCE        shift, and go to state 37
    IF            shift, and go to state 38
    CASE          shift, and go to state 39
    '('           shift, and go to state 26

    expression  go to state 40
    relation    go to state 28
    term        go to state 29
    factor      go to state 30
    primary     go to state 31
    statement_  go to state 100
    statement   go to state 42


State 93

   58 statement: CASE expression IS • case_list OTHERWISE ARROW statement_ ENDCASE

    CASE  shift, and go to state 101
    WHEN  shift, and go to state 102

    $default  reduce using rule 51 (case_list)

    case_list  go to state 103


State 94

   16 body: BEGIN_ statement_ END ';' •

    $default  reduce using rule 16 (body)


State 95

   11 parameters_list: parameters_list ',' IDENTIFIER ':' type •

    $default  reduce using rule 11 (parameters_list)


State 96

    8 variable: IDENTIFIER ':' type IS statement ';' •

    $default  reduce using rule 8 (variable)


State 97

    6 variable: IDENTIFIER ':' type ASSIGNMENT primary ';' •

    $default  reduce using rule 6 (variable)


State 98

   55 statement: REDUCE operator reductions ENDREDUCE •

    $default  reduce using rule 55 (statement)


State 99

   46 reductions: reductions statement_ •

    $default  reduce using rule 46 (reductions)


State 100

   56 statement: IF expression THEN statement_ • ENDIF
   57          | IF expression THEN statement_ • ELSE statement_ ENDIF

    ELSE   shift, and go to state 104
    ENDIF  shift, and go to state 105


State 101

   49 case_list: CASE • expression WHEN statement_ ARROW statement_
   50          | CASE • expression WHEN statement_ ARROW statement_ case_list

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    ADDOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 26

    expression  go to state 106
    relation    go to state 28
    term        go to state 29
    factor      go to state 30
    primary     go to state 31


State 102

   48 case_list: WHEN • INT_LITERAL ARROW statement_ case_list

    INT_LITERAL  shift, and go to state 107


State 103

   58 statement: CASE expression IS case_list • OTHERWISE ARROW statement_ ENDCASE

    OTHERWISE  shift, and go to state 108


State 104

   57 statement: IF expression THEN statement_ ELSE • statement_ ENDIF

    error         shift, and go to state 36
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    ADDOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    REDUCE        shift, and go to state 37
    IF            shift, and go to state 38
    CASE          shift, and go to state 39
    '('           shift, and go to state 26

    expression  go to state 40
    relation    go to state 28
    term        go to state 29
    factor      go to state 30
    primary     go to state 31
    statement_  go to state 109
    statement   go to state 42


State 105

   56 statement: IF expression THEN statement_ ENDIF •

    $default  reduce using rule 56 (statement)


State 106

   17 expression: expression • OROP relation
   18           | expression • ANDOP relation
   49 case_list: CASE expression • WHEN statement_ ARROW statement_
   50          | CASE expression • WHEN statement_ ARROW statement_ case_list

    ANDOP  shift, and go to state 51
    OROP   shift, and go to state 52
    WHEN   shift, and go to state 110


State 107

   48 case_list: WHEN INT_LITERAL • ARROW statement_ case_list

    ARROW  shift, and go to state 111


State 108

   58 statement: CASE expression IS case_list OTHERWISE • ARROW statement_ ENDCASE

    ARROW  shift, and go to state 112


State 109

   57 statement: IF expression THEN statement_ ELSE statement_ • ENDIF

    ENDIF  shift, and go to state 113


State 110

   49 case_list: CASE expression WHEN • statement_ ARROW statement_
   50          | CASE expression WHEN • statement_ ARROW statement_ case_list

    error         shift, and go to state 36
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    ADDOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    REDUCE        shift, and go to state 37
    IF            shift, and go to state 38
    CASE          shift, and go to state 39
    '('           shift, and go to state 26

    expression  go to state 40
    relation    go to state 28
    term        go to state 29
    factor      go to state 30
    primary     go to state 31
    statement_  go to state 114
    statement   go to state 42


State 111

   48 case_list: WHEN INT_LITERAL ARROW • statement_ case_list

    error         shift, and go to state 36
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    ADDOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    REDUCE        shift, and go to state 37
    IF            shift, and go to state 38
    CASE          shift, and go to state 39
    '('           shift, and go to state 26

    expression  go to state 40
    relation    go to state 28
    term        go to state 29
    factor      go to state 30
    primary     go to state 31
    statement_  go to state 115
    statement   go to state 42


State 112

   58 statement: CASE expression IS case_list OTHERWISE ARROW • statement_ ENDCASE

    error         shift, and go to state 36
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    ADDOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    REDUCE        shift, and go to state 37
    IF            shift, and go to state 38
    CASE          shift, and go to state 39
    '('           shift, and go to state 26

    expression  go to state 40
    relation    go to state 28
    term        go to state 29
    factor      go to state 30
    primary     go to state 31
    statement_  go to state 116
    statement   go to state 42


State 113

   57 statement: IF expression THEN statement_ ELSE statement_ ENDIF •

    $default  reduce using rule 57 (statement)


State 114

   49 case_list: CASE expression WHEN statement_ • ARROW statement_
   50          | CASE expression WHEN statement_ • ARROW statement_ case_list

    ARROW  shift, and go to state 117


State 115

   48 case_list: WHEN INT_LITERAL ARROW statement_ • case_list

    CASE  shift, and go to state 101
    WHEN  shift, and go to state 102

    $default  reduce using rule 51 (case_list)

    case_list  go to state 118


State 116

   58 statement: CASE expression IS case_list OTHERWISE ARROW statement_ • ENDCASE

    ENDCASE  shift, and go to state 119


State 117

   49 case_list: CASE expression WHEN statement_ ARROW • statement_
   50          | CASE expression WHEN statement_ ARROW • statement_ case_list

    error         shift, and go to state 36
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    ADDOP         shift, and go to state 24
    NOTOP         shift, and go to state 25
    REDUCE        shift, and go to state 37
    IF            shift, and go to state 38
    CASE          shift, and go to state 39
    '('           shift, and go to state 26

    expression  go to state 40
    relation    go to state 28
    term        go to state 29
    factor      go to state 30
    primary     go to state 31
    statement_  go to state 120
    statement   go to state 42


State 118

   48 case_list: WHEN INT_LITERAL ARROW statement_ case_list •

    $default  reduce using rule 48 (case_list)


State 119

   58 statement: CASE expression IS case_list OTHERWISE ARROW statement_ ENDCASE •

    $default  reduce using rule 58 (statement)


State 120

   49 case_list: CASE expression WHEN statement_ ARROW statement_ •
   50          | CASE expression WHEN statement_ ARROW statement_ • case_list

    CASE  shift, and go to state 101
    WHEN  shift, and go to state 102

    OTHERWISE  reduce using rule 49 (case_list)
    OTHERWISE  [reduce using rule 51 (case_list)]
    $default   reduce using rule 49 (case_list)

    case_list  go to state 121


State 121

   50 case_list: CASE expression WHEN statement_ ARROW statement_ case_list •

    $default  reduce using rule 50 (case_list)
