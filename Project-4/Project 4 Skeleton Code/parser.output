Terminals unused in grammar

    WHILE
    DO
    FOR
    BY
    REPEAT
    UNTIL
    NULL_STATEMENT
    LOWER_THAN_ELSE
    LOWER_THAN_REDUCE


State 8 conflicts: 1 reduce/reduce
State 30 conflicts: 1 shift/reduce
State 85 conflicts: 1 shift/reduce


Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';'

    3 optional_variable: variable
    4                  | variable optional_variable
    5                  | ε

    6 variable: IDENTIFIER ':' type IS statement_
    7         | IDENTIFIER ':' type ASSIGNMENT primary ';'
    8         | IDENTIFIER ':' BOOLEAN IS statement_
    9         | IDENTIFIER
   10         | IDENTIFIER ASSIGNMENT expression
   11         | IDENTIFIER ':' type IS statement ';'

   12 parameters: ε
   13           | parameters_list

   14 parameters_list: parameters_list ',' IDENTIFIER ':' type
   15                | IDENTIFIER ':' type

   16 type: INTEGER
   17     | BOOLEAN
   18     | REAL

   19 body: BEGIN_ statement_ END ';'

   20 expression: expression OROP relation
   21           | relation

   22 relation: relation RELOP term
   23         | term

   24 term: term ADDOP factor
   25     | factor

   26 factor: factor MULOP primary
   27       | primary

   28 primary: '(' expression ')'
   29        | INT_LITERAL
   30        | REAL_LITERAL
   31        | BOOL_LITERAL
   32        | IDENTIFIER

   33 operator: ADDOP
   34         | MULOP
   35         | RELOP
   36         | ANDOP
   37         | OROP
   38         | NOTOP
   39         | REMOP
   40         | EXP

   41 reductions: reductions statement_
   42           | ε

   43 case_list: CASE expression WHEN statement_ ARROW statement_
   44          | CASE expression WHEN statement_ ARROW statement_ case_list

   45 statement_: statement
   46           | statement ';' statement_
   47           | error ';'

   48 statement: expression
   49          | REDUCE operator reductions ENDREDUCE
   50          | IF expression THEN statement_ ENDIF
   51          | IF expression THEN statement_ ELSE statement_ ENDIF
   52          | CASE expression case_list OTHERWISE statement_ ENDCASE


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 28
    ')' (41) 28
    ',' (44) 14
    ':' (58) 6 7 8 11 14 15
    ';' (59) 2 7 11 19 46 47
    error (256) 47
    IDENTIFIER <iden> (258) 2 6 7 8 9 10 11 14 15 32
    INT_LITERAL <type> (259) 29
    REAL_LITERAL <type> (260) 30
    BOOL_LITERAL <type> (261) 31
    ADDOP <oper> (262) 24 33
    MULOP <oper> (263) 26 34
    RELOP <oper> (264) 22 35
    ANDOP <oper> (265) 36
    OROP <oper> (266) 20 37
    NOTOP <oper> (267) 38
    REMOP <oper> (268) 39
    EXP <oper> (269) 40
    IS (270) 6 8 11
    BEGIN_ (271) 19
    BOOLEAN (272) 8 17
    END (273) 19
    ENDREDUCE (274) 49
    FUNCTION (275) 2
    INTEGER (276) 16
    REAL (277) 18
    REDUCE (278) 49
    RETURNS (279) 2
    ASSIGNMENT (280) 7 10
    IF (281) 50 51
    THEN (282) 50 51
    ELSE (283) 51
    ENDIF (284) 50 51
    CASE <type> (285) 43 44 52
    WHEN <type> (286) 43 44
    ARROW <type> (287) 43 44
    OTHERWISE <type> (288) 52
    ENDCASE (289) 52
    WHILE (290)
    DO (291)
    FOR (292)
    BY (293)
    REPEAT (294)
    UNTIL (295)
    NULL_STATEMENT (296)
    LOWER_THAN_ELSE (297)
    LOWER_THAN_REDUCE (298)


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    function (50)
        on left: 1
        on right: 0
    function_header (51)
        on left: 2
        on right: 1
    optional_variable (52)
        on left: 3 4 5
        on right: 1 4
    variable <type> (53)
        on left: 6 7 8 9 10 11
        on right: 3 4
    parameters (54)
        on left: 12 13
        on right: 2
    parameters_list (55)
        on left: 14 15
        on right: 13 14
    type <type> (56)
        on left: 16 17 18
        on right: 2 6 7 11 14 15
    body <type> (57)
        on left: 19
        on right: 1
    expression <type> (58)
        on left: 20 21
        on right: 10 20 28 43 44 48 50 51 52
    relation <type> (59)
        on left: 22 23
        on right: 20 21 22
    term <type> (60)
        on left: 24 25
        on right: 22 23 24
    factor <type> (61)
        on left: 26 27
        on right: 24 25 26
    primary <type> (62)
        on left: 28 29 30 31 32
        on right: 7 26 27
    operator <oper> (63)
        on left: 33 34 35 36 37 38 39 40
        on right: 49
    reductions <type> (64)
        on left: 41 42
        on right: 41 49
    case_list <type> (65)
        on left: 43 44
        on right: 44 52
    statement_ <type> (66)
        on left: 45 46 47
        on right: 6 8 19 41 43 44 46 50 51 52
    statement <type> (67)
        on left: 48 49 50 51 52
        on right: 11 45 46


State 0

    0 $accept: • function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    2 function_header: FUNCTION • IDENTIFIER parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function • $end

    $end  shift, and go to state 5


State 3

    1 function: function_header • optional_variable body

    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 5 (optional_variable)

    optional_variable  go to state 7
    variable           go to state 8


State 4

    2 function_header: FUNCTION IDENTIFIER • parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 9

    $default  reduce using rule 12 (parameters)

    parameters       go to state 10
    parameters_list  go to state 11


State 5

    0 $accept: function $end •

    $default  accept


State 6

    6 variable: IDENTIFIER • ':' type IS statement_
    7         | IDENTIFIER • ':' type ASSIGNMENT primary ';'
    8         | IDENTIFIER • ':' BOOLEAN IS statement_
    9         | IDENTIFIER •
   10         | IDENTIFIER • ASSIGNMENT expression
   11         | IDENTIFIER • ':' type IS statement ';'

    ASSIGNMENT  shift, and go to state 12
    ':'         shift, and go to state 13

    $default  reduce using rule 9 (variable)


State 7

    1 function: function_header optional_variable • body

    BEGIN_  shift, and go to state 14

    body  go to state 15


State 8

    3 optional_variable: variable •
    4                  | variable • optional_variable

    IDENTIFIER  shift, and go to state 6

    BEGIN_    reduce using rule 3 (optional_variable)
    BEGIN_    [reduce using rule 5 (optional_variable)]
    $default  reduce using rule 3 (optional_variable)

    optional_variable  go to state 16
    variable           go to state 8


State 9

   15 parameters_list: IDENTIFIER • ':' type

    ':'  shift, and go to state 17


State 10

    2 function_header: FUNCTION IDENTIFIER parameters • RETURNS type ';'

    RETURNS  shift, and go to state 18


State 11

   13 parameters: parameters_list •
   14 parameters_list: parameters_list • ',' IDENTIFIER ':' type

    ','  shift, and go to state 19

    $default  reduce using rule 13 (parameters)


State 12

   10 variable: IDENTIFIER ASSIGNMENT • expression

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 24

    expression  go to state 25
    relation    go to state 26
    term        go to state 27
    factor      go to state 28
    primary     go to state 29


State 13

    6 variable: IDENTIFIER ':' • type IS statement_
    7         | IDENTIFIER ':' • type ASSIGNMENT primary ';'
    8         | IDENTIFIER ':' • BOOLEAN IS statement_
   11         | IDENTIFIER ':' • type IS statement ';'

    BOOLEAN  shift, and go to state 30
    INTEGER  shift, and go to state 31
    REAL     shift, and go to state 32

    type  go to state 33


State 14

   19 body: BEGIN_ • statement_ END ';'

    error         shift, and go to state 34
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    REDUCE        shift, and go to state 35
    IF            shift, and go to state 36
    CASE          shift, and go to state 37
    '('           shift, and go to state 24

    expression  go to state 38
    relation    go to state 26
    term        go to state 27
    factor      go to state 28
    primary     go to state 29
    statement_  go to state 39
    statement   go to state 40


State 15

    1 function: function_header optional_variable body •

    $default  reduce using rule 1 (function)


State 16

    4 optional_variable: variable optional_variable •

    $default  reduce using rule 4 (optional_variable)


State 17

   15 parameters_list: IDENTIFIER ':' • type

    BOOLEAN  shift, and go to state 41
    INTEGER  shift, and go to state 31
    REAL     shift, and go to state 32

    type  go to state 42


State 18

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS • type ';'

    BOOLEAN  shift, and go to state 41
    INTEGER  shift, and go to state 31
    REAL     shift, and go to state 32

    type  go to state 43


State 19

   14 parameters_list: parameters_list ',' • IDENTIFIER ':' type

    IDENTIFIER  shift, and go to state 44


State 20

   32 primary: IDENTIFIER •

    $default  reduce using rule 32 (primary)


State 21

   29 primary: INT_LITERAL •

    $default  reduce using rule 29 (primary)


State 22

   30 primary: REAL_LITERAL •

    $default  reduce using rule 30 (primary)


State 23

   31 primary: BOOL_LITERAL •

    $default  reduce using rule 31 (primary)


State 24

   28 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 24

    expression  go to state 45
    relation    go to state 26
    term        go to state 27
    factor      go to state 28
    primary     go to state 29


State 25

   10 variable: IDENTIFIER ASSIGNMENT expression •
   20 expression: expression • OROP relation

    OROP  shift, and go to state 46

    $default  reduce using rule 10 (variable)


State 26

   21 expression: relation •
   22 relation: relation • RELOP term

    RELOP  shift, and go to state 47

    $default  reduce using rule 21 (expression)


State 27

   23 relation: term •
   24 term: term • ADDOP factor

    ADDOP  shift, and go to state 48

    $default  reduce using rule 23 (relation)


State 28

   25 term: factor •
   26 factor: factor • MULOP primary

    MULOP  shift, and go to state 49

    $default  reduce using rule 25 (term)


State 29

   27 factor: primary •

    $default  reduce using rule 27 (factor)


State 30

    8 variable: IDENTIFIER ':' BOOLEAN • IS statement_
   17 type: BOOLEAN •

    IS  shift, and go to state 50

    IS        [reduce using rule 17 (type)]
    $default  reduce using rule 17 (type)


State 31

   16 type: INTEGER •

    $default  reduce using rule 16 (type)


State 32

   18 type: REAL •

    $default  reduce using rule 18 (type)


State 33

    6 variable: IDENTIFIER ':' type • IS statement_
    7         | IDENTIFIER ':' type • ASSIGNMENT primary ';'
   11         | IDENTIFIER ':' type • IS statement ';'

    IS          shift, and go to state 51
    ASSIGNMENT  shift, and go to state 52


State 34

   47 statement_: error • ';'

    ';'  shift, and go to state 53


State 35

   49 statement: REDUCE • operator reductions ENDREDUCE

    ADDOP  shift, and go to state 54
    MULOP  shift, and go to state 55
    RELOP  shift, and go to state 56
    ANDOP  shift, and go to state 57
    OROP   shift, and go to state 58
    NOTOP  shift, and go to state 59
    REMOP  shift, and go to state 60
    EXP    shift, and go to state 61

    operator  go to state 62


State 36

   50 statement: IF • expression THEN statement_ ENDIF
   51          | IF • expression THEN statement_ ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 24

    expression  go to state 63
    relation    go to state 26
    term        go to state 27
    factor      go to state 28
    primary     go to state 29


State 37

   52 statement: CASE • expression case_list OTHERWISE statement_ ENDCASE

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 24

    expression  go to state 64
    relation    go to state 26
    term        go to state 27
    factor      go to state 28
    primary     go to state 29


State 38

   20 expression: expression • OROP relation
   48 statement: expression •

    OROP  shift, and go to state 46

    $default  reduce using rule 48 (statement)


State 39

   19 body: BEGIN_ statement_ • END ';'

    END  shift, and go to state 65


State 40

   45 statement_: statement •
   46           | statement • ';' statement_

    ';'  shift, and go to state 66

    $default  reduce using rule 45 (statement_)


State 41

   17 type: BOOLEAN •

    $default  reduce using rule 17 (type)


State 42

   15 parameters_list: IDENTIFIER ':' type •

    $default  reduce using rule 15 (parameters_list)


State 43

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type • ';'

    ';'  shift, and go to state 67


State 44

   14 parameters_list: parameters_list ',' IDENTIFIER • ':' type

    ':'  shift, and go to state 68


State 45

   20 expression: expression • OROP relation
   28 primary: '(' expression • ')'

    OROP  shift, and go to state 46
    ')'   shift, and go to state 69


State 46

   20 expression: expression OROP • relation

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 24

    relation  go to state 70
    term      go to state 27
    factor    go to state 28
    primary   go to state 29


State 47

   22 relation: relation RELOP • term

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 24

    term     go to state 71
    factor   go to state 28
    primary  go to state 29


State 48

   24 term: term ADDOP • factor

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 24

    factor   go to state 72
    primary  go to state 29


State 49

   26 factor: factor MULOP • primary

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 24

    primary  go to state 73


State 50

    8 variable: IDENTIFIER ':' BOOLEAN IS • statement_

    error         shift, and go to state 34
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    REDUCE        shift, and go to state 35
    IF            shift, and go to state 36
    CASE          shift, and go to state 37
    '('           shift, and go to state 24

    expression  go to state 38
    relation    go to state 26
    term        go to state 27
    factor      go to state 28
    primary     go to state 29
    statement_  go to state 74
    statement   go to state 40


State 51

    6 variable: IDENTIFIER ':' type IS • statement_
   11         | IDENTIFIER ':' type IS • statement ';'

    error         shift, and go to state 34
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    REDUCE        shift, and go to state 35
    IF            shift, and go to state 36
    CASE          shift, and go to state 37
    '('           shift, and go to state 24

    expression  go to state 38
    relation    go to state 26
    term        go to state 27
    factor      go to state 28
    primary     go to state 29
    statement_  go to state 75
    statement   go to state 76


State 52

    7 variable: IDENTIFIER ':' type ASSIGNMENT • primary ';'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 24

    primary  go to state 77


State 53

   47 statement_: error ';' •

    $default  reduce using rule 47 (statement_)


State 54

   33 operator: ADDOP •

    $default  reduce using rule 33 (operator)


State 55

   34 operator: MULOP •

    $default  reduce using rule 34 (operator)


State 56

   35 operator: RELOP •

    $default  reduce using rule 35 (operator)


State 57

   36 operator: ANDOP •

    $default  reduce using rule 36 (operator)


State 58

   37 operator: OROP •

    $default  reduce using rule 37 (operator)


State 59

   38 operator: NOTOP •

    $default  reduce using rule 38 (operator)


State 60

   39 operator: REMOP •

    $default  reduce using rule 39 (operator)


State 61

   40 operator: EXP •

    $default  reduce using rule 40 (operator)


State 62

   49 statement: REDUCE operator • reductions ENDREDUCE

    $default  reduce using rule 42 (reductions)

    reductions  go to state 78


State 63

   20 expression: expression • OROP relation
   50 statement: IF expression • THEN statement_ ENDIF
   51          | IF expression • THEN statement_ ELSE statement_ ENDIF

    OROP  shift, and go to state 46
    THEN  shift, and go to state 79


State 64

   20 expression: expression • OROP relation
   52 statement: CASE expression • case_list OTHERWISE statement_ ENDCASE

    OROP  shift, and go to state 46
    CASE  shift, and go to state 80

    case_list  go to state 81


State 65

   19 body: BEGIN_ statement_ END • ';'

    ';'  shift, and go to state 82


State 66

   46 statement_: statement ';' • statement_

    error         shift, and go to state 34
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    REDUCE        shift, and go to state 35
    IF            shift, and go to state 36
    CASE          shift, and go to state 37
    '('           shift, and go to state 24

    expression  go to state 38
    relation    go to state 26
    term        go to state 27
    factor      go to state 28
    primary     go to state 29
    statement_  go to state 83
    statement   go to state 40


State 67

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 68

   14 parameters_list: parameters_list ',' IDENTIFIER ':' • type

    BOOLEAN  shift, and go to state 41
    INTEGER  shift, and go to state 31
    REAL     shift, and go to state 32

    type  go to state 84


State 69

   28 primary: '(' expression ')' •

    $default  reduce using rule 28 (primary)


State 70

   20 expression: expression OROP relation •
   22 relation: relation • RELOP term

    RELOP  shift, and go to state 47

    $default  reduce using rule 20 (expression)


State 71

   22 relation: relation RELOP term •
   24 term: term • ADDOP factor

    ADDOP  shift, and go to state 48

    $default  reduce using rule 22 (relation)


State 72

   24 term: term ADDOP factor •
   26 factor: factor • MULOP primary

    MULOP  shift, and go to state 49

    $default  reduce using rule 24 (term)


State 73

   26 factor: factor MULOP primary •

    $default  reduce using rule 26 (factor)


State 74

    8 variable: IDENTIFIER ':' BOOLEAN IS statement_ •

    $default  reduce using rule 8 (variable)


State 75

    6 variable: IDENTIFIER ':' type IS statement_ •

    $default  reduce using rule 6 (variable)


State 76

   11 variable: IDENTIFIER ':' type IS statement • ';'
   45 statement_: statement •
   46           | statement • ';' statement_

    ';'  shift, and go to state 85

    $default  reduce using rule 45 (statement_)


State 77

    7 variable: IDENTIFIER ':' type ASSIGNMENT primary • ';'

    ';'  shift, and go to state 86


State 78

   41 reductions: reductions • statement_
   49 statement: REDUCE operator reductions • ENDREDUCE

    error         shift, and go to state 34
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    ENDREDUCE     shift, and go to state 87
    REDUCE        shift, and go to state 35
    IF            shift, and go to state 36
    CASE          shift, and go to state 37
    '('           shift, and go to state 24

    expression  go to state 38
    relation    go to state 26
    term        go to state 27
    factor      go to state 28
    primary     go to state 29
    statement_  go to state 88
    statement   go to state 40


State 79

   50 statement: IF expression THEN • statement_ ENDIF
   51          | IF expression THEN • statement_ ELSE statement_ ENDIF

    error         shift, and go to state 34
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    REDUCE        shift, and go to state 35
    IF            shift, and go to state 36
    CASE          shift, and go to state 37
    '('           shift, and go to state 24

    expression  go to state 38
    relation    go to state 26
    term        go to state 27
    factor      go to state 28
    primary     go to state 29
    statement_  go to state 89
    statement   go to state 40


State 80

   43 case_list: CASE • expression WHEN statement_ ARROW statement_
   44          | CASE • expression WHEN statement_ ARROW statement_ case_list

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 24

    expression  go to state 90
    relation    go to state 26
    term        go to state 27
    factor      go to state 28
    primary     go to state 29


State 81

   52 statement: CASE expression case_list • OTHERWISE statement_ ENDCASE

    OTHERWISE  shift, and go to state 91


State 82

   19 body: BEGIN_ statement_ END ';' •

    $default  reduce using rule 19 (body)


State 83

   46 statement_: statement ';' statement_ •

    $default  reduce using rule 46 (statement_)


State 84

   14 parameters_list: parameters_list ',' IDENTIFIER ':' type •

    $default  reduce using rule 14 (parameters_list)


State 85

   11 variable: IDENTIFIER ':' type IS statement ';' •
   46 statement_: statement ';' • statement_

    error         shift, and go to state 34
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    REDUCE        shift, and go to state 35
    IF            shift, and go to state 36
    CASE          shift, and go to state 37
    '('           shift, and go to state 24

    IDENTIFIER  [reduce using rule 11 (variable)]
    BEGIN_      reduce using rule 11 (variable)

    expression  go to state 38
    relation    go to state 26
    term        go to state 27
    factor      go to state 28
    primary     go to state 29
    statement_  go to state 83
    statement   go to state 40


State 86

    7 variable: IDENTIFIER ':' type ASSIGNMENT primary ';' •

    $default  reduce using rule 7 (variable)


State 87

   49 statement: REDUCE operator reductions ENDREDUCE •

    $default  reduce using rule 49 (statement)


State 88

   41 reductions: reductions statement_ •

    $default  reduce using rule 41 (reductions)


State 89

   50 statement: IF expression THEN statement_ • ENDIF
   51          | IF expression THEN statement_ • ELSE statement_ ENDIF

    ELSE   shift, and go to state 92
    ENDIF  shift, and go to state 93


State 90

   20 expression: expression • OROP relation
   43 case_list: CASE expression • WHEN statement_ ARROW statement_
   44          | CASE expression • WHEN statement_ ARROW statement_ case_list

    OROP  shift, and go to state 46
    WHEN  shift, and go to state 94


State 91

   52 statement: CASE expression case_list OTHERWISE • statement_ ENDCASE

    error         shift, and go to state 34
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    REDUCE        shift, and go to state 35
    IF            shift, and go to state 36
    CASE          shift, and go to state 37
    '('           shift, and go to state 24

    expression  go to state 38
    relation    go to state 26
    term        go to state 27
    factor      go to state 28
    primary     go to state 29
    statement_  go to state 95
    statement   go to state 40


State 92

   51 statement: IF expression THEN statement_ ELSE • statement_ ENDIF

    error         shift, and go to state 34
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    REDUCE        shift, and go to state 35
    IF            shift, and go to state 36
    CASE          shift, and go to state 37
    '('           shift, and go to state 24

    expression  go to state 38
    relation    go to state 26
    term        go to state 27
    factor      go to state 28
    primary     go to state 29
    statement_  go to state 96
    statement   go to state 40


State 93

   50 statement: IF expression THEN statement_ ENDIF •

    $default  reduce using rule 50 (statement)


State 94

   43 case_list: CASE expression WHEN • statement_ ARROW statement_
   44          | CASE expression WHEN • statement_ ARROW statement_ case_list

    error         shift, and go to state 34
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    REDUCE        shift, and go to state 35
    IF            shift, and go to state 36
    CASE          shift, and go to state 37
    '('           shift, and go to state 24

    expression  go to state 38
    relation    go to state 26
    term        go to state 27
    factor      go to state 28
    primary     go to state 29
    statement_  go to state 97
    statement   go to state 40


State 95

   52 statement: CASE expression case_list OTHERWISE statement_ • ENDCASE

    ENDCASE  shift, and go to state 98


State 96

   51 statement: IF expression THEN statement_ ELSE statement_ • ENDIF

    ENDIF  shift, and go to state 99


State 97

   43 case_list: CASE expression WHEN statement_ • ARROW statement_
   44          | CASE expression WHEN statement_ • ARROW statement_ case_list

    ARROW  shift, and go to state 100


State 98

   52 statement: CASE expression case_list OTHERWISE statement_ ENDCASE •

    $default  reduce using rule 52 (statement)


State 99

   51 statement: IF expression THEN statement_ ELSE statement_ ENDIF •

    $default  reduce using rule 51 (statement)


State 100

   43 case_list: CASE expression WHEN statement_ ARROW • statement_
   44          | CASE expression WHEN statement_ ARROW • statement_ case_list

    error         shift, and go to state 34
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    REDUCE        shift, and go to state 35
    IF            shift, and go to state 36
    CASE          shift, and go to state 37
    '('           shift, and go to state 24

    expression  go to state 38
    relation    go to state 26
    term        go to state 27
    factor      go to state 28
    primary     go to state 29
    statement_  go to state 101
    statement   go to state 40


State 101

   43 case_list: CASE expression WHEN statement_ ARROW statement_ •
   44          | CASE expression WHEN statement_ ARROW statement_ • case_list

    CASE  shift, and go to state 80

    $default  reduce using rule 43 (case_list)

    case_list  go to state 102


State 102

   44 case_list: CASE expression WHEN statement_ ARROW statement_ case_list •

    $default  reduce using rule 44 (case_list)
