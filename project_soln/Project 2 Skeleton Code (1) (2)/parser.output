Grammar

    0 $accept: function $end

    1 function: function_header body

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';'

    3 parameters: ε
    4           | parameters_list

    5 parameters_list: parameters_list ',' IDENTIFIER ':' type
    6                | IDENTIFIER ':' type

    7 type: INTEGER
    8     | BOOLEAN
    9     | REAL

   10 body: BEGIN_ statement_ END ';'

   11 statement_: statement ';'
   12           | error ';'

   13 statement: expression
   14          | REDUCE operator reductions ENDREDUCE
   15          | IF expression THEN statement_ ELSE statement_ ENDIF
   16          | CASE expression IS case_list OTHERWISE ARROW statement_ ENDCASE
   17          | WHILE expression DO statement_ END ';'
   18          | FOR IDENTIFIER ASSIGNMENT expression BY expression WHILE expression DO statement_ END ';'
   19          | REPEAT statement_seq UNTIL expression ';'
   20          | NULL_STATEMENT ';'

   21 case_list: WHEN INT_LITERAL ARROW statement_ case_list
   22          | ε

   23 operator: ADDOP
   24         | MULOP
   25         | RELOP

   26 reductions: reductions statement_
   27           | ε

   28 expression: expression ANDOP relation
   29           | relation

   30 relation: relation RELOP term
   31         | term

   32 term: term ADDOP factor
   33     | factor

   34 factor: factor MULOP primary
   35       | primary

   36 primary: '(' expression ')'
   37        | INT_LITERAL
   38        | REAL_LITERAL
   39        | BOOL_LITERAL
   40        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 36
    ')' (41) 36
    ',' (44) 5
    ':' (58) 5 6
    ';' (59) 2 10 11 12 17 18 19 20
    error (256) 12
    IDENTIFIER (258) 2 5 6 18 40
    INT_LITERAL (259) 21 37
    REAL_LITERAL (260) 38
    BOOL_LITERAL (261) 39
    ADDOP (262) 23 32
    MULOP (263) 24 34
    RELOP (264) 25 30
    ANDOP (265) 28
    IS (266) 16
    REAL (267) 9
    BEGIN_ (268) 10
    BOOLEAN (269) 8
    END (270) 10 17 18
    ENDREDUCE (271) 14
    FUNCTION (272) 2
    INTEGER (273) 7
    REDUCE (274) 14
    RETURNS (275) 2
    ASSIGNMENT (276) 18
    IF (277) 15
    THEN (278) 15
    ELSE (279) 15
    ENDIF (280) 15
    CASE (281) 16
    WHEN (282) 21
    ARROW (283) 16 21
    OTHERWISE (284) 16
    ENDCASE (285) 16
    WHILE (286) 17 18
    DO (287) 17 18
    FOR (288) 18
    BY (289) 18
    REPEAT (290) 19
    UNTIL (291) 19
    NULL_STATEMENT (292) 20
    statement_seq (293) 19


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    function (45)
        on left: 1
        on right: 0
    function_header (46)
        on left: 2
        on right: 1
    parameters (47)
        on left: 3 4
        on right: 2
    parameters_list (48)
        on left: 5 6
        on right: 4 5
    type (49)
        on left: 7 8 9
        on right: 2 5 6
    body (50)
        on left: 10
        on right: 1
    statement_ (51)
        on left: 11 12
        on right: 10 15 16 17 18 21 26
    statement (52)
        on left: 13 14 15 16 17 18 19 20
        on right: 11
    case_list (53)
        on left: 21 22
        on right: 16 21
    operator (54)
        on left: 23 24 25
        on right: 14
    reductions (55)
        on left: 26 27
        on right: 14 26
    expression (56)
        on left: 28 29
        on right: 13 15 16 17 18 19 28 36
    relation (57)
        on left: 30 31
        on right: 28 29 30
    term (58)
        on left: 32 33
        on right: 30 31 32
    factor (59)
        on left: 34 35
        on right: 32 33 34
    primary (60)
        on left: 36 37 38 39 40
        on right: 34 35


State 0

    0 $accept: • function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    2 function_header: FUNCTION • IDENTIFIER parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function • $end

    $end  shift, and go to state 5


State 3

    1 function: function_header • body

    BEGIN_  shift, and go to state 6

    body  go to state 7


State 4

    2 function_header: FUNCTION IDENTIFIER • parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 8

    $default  reduce using rule 3 (parameters)

    parameters       go to state 9
    parameters_list  go to state 10


State 5

    0 $accept: function $end •

    $default  accept


State 6

   10 body: BEGIN_ • statement_ END ';'

    error           shift, and go to state 11
    IDENTIFIER      shift, and go to state 12
    INT_LITERAL     shift, and go to state 13
    REAL_LITERAL    shift, and go to state 14
    BOOL_LITERAL    shift, and go to state 15
    REDUCE          shift, and go to state 16
    IF              shift, and go to state 17
    CASE            shift, and go to state 18
    WHILE           shift, and go to state 19
    FOR             shift, and go to state 20
    REPEAT          shift, and go to state 21
    NULL_STATEMENT  shift, and go to state 22
    '('             shift, and go to state 23

    statement_  go to state 24
    statement   go to state 25
    expression  go to state 26
    relation    go to state 27
    term        go to state 28
    factor      go to state 29
    primary     go to state 30


State 7

    1 function: function_header body •

    $default  reduce using rule 1 (function)


State 8

    6 parameters_list: IDENTIFIER • ':' type

    ':'  shift, and go to state 31


State 9

    2 function_header: FUNCTION IDENTIFIER parameters • RETURNS type ';'

    RETURNS  shift, and go to state 32


State 10

    4 parameters: parameters_list •
    5 parameters_list: parameters_list • ',' IDENTIFIER ':' type

    ','  shift, and go to state 33

    $default  reduce using rule 4 (parameters)


State 11

   12 statement_: error • ';'

    ';'  shift, and go to state 34


State 12

   40 primary: IDENTIFIER •

    $default  reduce using rule 40 (primary)


State 13

   37 primary: INT_LITERAL •

    $default  reduce using rule 37 (primary)


State 14

   38 primary: REAL_LITERAL •

    $default  reduce using rule 38 (primary)


State 15

   39 primary: BOOL_LITERAL •

    $default  reduce using rule 39 (primary)


State 16

   14 statement: REDUCE • operator reductions ENDREDUCE

    ADDOP  shift, and go to state 35
    MULOP  shift, and go to state 36
    RELOP  shift, and go to state 37

    operator  go to state 38


State 17

   15 statement: IF • expression THEN statement_ ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 12
    INT_LITERAL   shift, and go to state 13
    REAL_LITERAL  shift, and go to state 14
    BOOL_LITERAL  shift, and go to state 15
    '('           shift, and go to state 23

    expression  go to state 39
    relation    go to state 27
    term        go to state 28
    factor      go to state 29
    primary     go to state 30


State 18

   16 statement: CASE • expression IS case_list OTHERWISE ARROW statement_ ENDCASE

    IDENTIFIER    shift, and go to state 12
    INT_LITERAL   shift, and go to state 13
    REAL_LITERAL  shift, and go to state 14
    BOOL_LITERAL  shift, and go to state 15
    '('           shift, and go to state 23

    expression  go to state 40
    relation    go to state 27
    term        go to state 28
    factor      go to state 29
    primary     go to state 30


State 19

   17 statement: WHILE • expression DO statement_ END ';'

    IDENTIFIER    shift, and go to state 12
    INT_LITERAL   shift, and go to state 13
    REAL_LITERAL  shift, and go to state 14
    BOOL_LITERAL  shift, and go to state 15
    '('           shift, and go to state 23

    expression  go to state 41
    relation    go to state 27
    term        go to state 28
    factor      go to state 29
    primary     go to state 30


State 20

   18 statement: FOR • IDENTIFIER ASSIGNMENT expression BY expression WHILE expression DO statement_ END ';'

    IDENTIFIER  shift, and go to state 42


State 21

   19 statement: REPEAT • statement_seq UNTIL expression ';'

    statement_seq  shift, and go to state 43


State 22

   20 statement: NULL_STATEMENT • ';'

    ';'  shift, and go to state 44


State 23

   36 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 12
    INT_LITERAL   shift, and go to state 13
    REAL_LITERAL  shift, and go to state 14
    BOOL_LITERAL  shift, and go to state 15
    '('           shift, and go to state 23

    expression  go to state 45
    relation    go to state 27
    term        go to state 28
    factor      go to state 29
    primary     go to state 30


State 24

   10 body: BEGIN_ statement_ • END ';'

    END  shift, and go to state 46


State 25

   11 statement_: statement • ';'

    ';'  shift, and go to state 47


State 26

   13 statement: expression •
   28 expression: expression • ANDOP relation

    ANDOP  shift, and go to state 48

    $default  reduce using rule 13 (statement)


State 27

   29 expression: relation •
   30 relation: relation • RELOP term

    RELOP  shift, and go to state 49

    $default  reduce using rule 29 (expression)


State 28

   31 relation: term •
   32 term: term • ADDOP factor

    ADDOP  shift, and go to state 50

    $default  reduce using rule 31 (relation)


State 29

   33 term: factor •
   34 factor: factor • MULOP primary

    MULOP  shift, and go to state 51

    $default  reduce using rule 33 (term)


State 30

   35 factor: primary •

    $default  reduce using rule 35 (factor)


State 31

    6 parameters_list: IDENTIFIER ':' • type

    REAL     shift, and go to state 52
    BOOLEAN  shift, and go to state 53
    INTEGER  shift, and go to state 54

    type  go to state 55


State 32

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS • type ';'

    REAL     shift, and go to state 52
    BOOLEAN  shift, and go to state 53
    INTEGER  shift, and go to state 54

    type  go to state 56


State 33

    5 parameters_list: parameters_list ',' • IDENTIFIER ':' type

    IDENTIFIER  shift, and go to state 57


State 34

   12 statement_: error ';' •

    $default  reduce using rule 12 (statement_)


State 35

   23 operator: ADDOP •

    $default  reduce using rule 23 (operator)


State 36

   24 operator: MULOP •

    $default  reduce using rule 24 (operator)


State 37

   25 operator: RELOP •

    $default  reduce using rule 25 (operator)


State 38

   14 statement: REDUCE operator • reductions ENDREDUCE

    $default  reduce using rule 27 (reductions)

    reductions  go to state 58


State 39

   15 statement: IF expression • THEN statement_ ELSE statement_ ENDIF
   28 expression: expression • ANDOP relation

    ANDOP  shift, and go to state 48
    THEN   shift, and go to state 59


State 40

   16 statement: CASE expression • IS case_list OTHERWISE ARROW statement_ ENDCASE
   28 expression: expression • ANDOP relation

    ANDOP  shift, and go to state 48
    IS     shift, and go to state 60


State 41

   17 statement: WHILE expression • DO statement_ END ';'
   28 expression: expression • ANDOP relation

    ANDOP  shift, and go to state 48
    DO     shift, and go to state 61


State 42

   18 statement: FOR IDENTIFIER • ASSIGNMENT expression BY expression WHILE expression DO statement_ END ';'

    ASSIGNMENT  shift, and go to state 62


State 43

   19 statement: REPEAT statement_seq • UNTIL expression ';'

    UNTIL  shift, and go to state 63


State 44

   20 statement: NULL_STATEMENT ';' •

    $default  reduce using rule 20 (statement)


State 45

   28 expression: expression • ANDOP relation
   36 primary: '(' expression • ')'

    ANDOP  shift, and go to state 48
    ')'    shift, and go to state 64


State 46

   10 body: BEGIN_ statement_ END • ';'

    ';'  shift, and go to state 65


State 47

   11 statement_: statement ';' •

    $default  reduce using rule 11 (statement_)


State 48

   28 expression: expression ANDOP • relation

    IDENTIFIER    shift, and go to state 12
    INT_LITERAL   shift, and go to state 13
    REAL_LITERAL  shift, and go to state 14
    BOOL_LITERAL  shift, and go to state 15
    '('           shift, and go to state 23

    relation  go to state 66
    term      go to state 28
    factor    go to state 29
    primary   go to state 30


State 49

   30 relation: relation RELOP • term

    IDENTIFIER    shift, and go to state 12
    INT_LITERAL   shift, and go to state 13
    REAL_LITERAL  shift, and go to state 14
    BOOL_LITERAL  shift, and go to state 15
    '('           shift, and go to state 23

    term     go to state 67
    factor   go to state 29
    primary  go to state 30


State 50

   32 term: term ADDOP • factor

    IDENTIFIER    shift, and go to state 12
    INT_LITERAL   shift, and go to state 13
    REAL_LITERAL  shift, and go to state 14
    BOOL_LITERAL  shift, and go to state 15
    '('           shift, and go to state 23

    factor   go to state 68
    primary  go to state 30


State 51

   34 factor: factor MULOP • primary

    IDENTIFIER    shift, and go to state 12
    INT_LITERAL   shift, and go to state 13
    REAL_LITERAL  shift, and go to state 14
    BOOL_LITERAL  shift, and go to state 15
    '('           shift, and go to state 23

    primary  go to state 69


State 52

    9 type: REAL •

    $default  reduce using rule 9 (type)


State 53

    8 type: BOOLEAN •

    $default  reduce using rule 8 (type)


State 54

    7 type: INTEGER •

    $default  reduce using rule 7 (type)


State 55

    6 parameters_list: IDENTIFIER ':' type •

    $default  reduce using rule 6 (parameters_list)


State 56

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type • ';'

    ';'  shift, and go to state 70


State 57

    5 parameters_list: parameters_list ',' IDENTIFIER • ':' type

    ':'  shift, and go to state 71


State 58

   14 statement: REDUCE operator reductions • ENDREDUCE
   26 reductions: reductions • statement_

    error           shift, and go to state 11
    IDENTIFIER      shift, and go to state 12
    INT_LITERAL     shift, and go to state 13
    REAL_LITERAL    shift, and go to state 14
    BOOL_LITERAL    shift, and go to state 15
    ENDREDUCE       shift, and go to state 72
    REDUCE          shift, and go to state 16
    IF              shift, and go to state 17
    CASE            shift, and go to state 18
    WHILE           shift, and go to state 19
    FOR             shift, and go to state 20
    REPEAT          shift, and go to state 21
    NULL_STATEMENT  shift, and go to state 22
    '('             shift, and go to state 23

    statement_  go to state 73
    statement   go to state 25
    expression  go to state 26
    relation    go to state 27
    term        go to state 28
    factor      go to state 29
    primary     go to state 30


State 59

   15 statement: IF expression THEN • statement_ ELSE statement_ ENDIF

    error           shift, and go to state 11
    IDENTIFIER      shift, and go to state 12
    INT_LITERAL     shift, and go to state 13
    REAL_LITERAL    shift, and go to state 14
    BOOL_LITERAL    shift, and go to state 15
    REDUCE          shift, and go to state 16
    IF              shift, and go to state 17
    CASE            shift, and go to state 18
    WHILE           shift, and go to state 19
    FOR             shift, and go to state 20
    REPEAT          shift, and go to state 21
    NULL_STATEMENT  shift, and go to state 22
    '('             shift, and go to state 23

    statement_  go to state 74
    statement   go to state 25
    expression  go to state 26
    relation    go to state 27
    term        go to state 28
    factor      go to state 29
    primary     go to state 30


State 60

   16 statement: CASE expression IS • case_list OTHERWISE ARROW statement_ ENDCASE

    WHEN  shift, and go to state 75

    $default  reduce using rule 22 (case_list)

    case_list  go to state 76


State 61

   17 statement: WHILE expression DO • statement_ END ';'

    error           shift, and go to state 11
    IDENTIFIER      shift, and go to state 12
    INT_LITERAL     shift, and go to state 13
    REAL_LITERAL    shift, and go to state 14
    BOOL_LITERAL    shift, and go to state 15
    REDUCE          shift, and go to state 16
    IF              shift, and go to state 17
    CASE            shift, and go to state 18
    WHILE           shift, and go to state 19
    FOR             shift, and go to state 20
    REPEAT          shift, and go to state 21
    NULL_STATEMENT  shift, and go to state 22
    '('             shift, and go to state 23

    statement_  go to state 77
    statement   go to state 25
    expression  go to state 26
    relation    go to state 27
    term        go to state 28
    factor      go to state 29
    primary     go to state 30


State 62

   18 statement: FOR IDENTIFIER ASSIGNMENT • expression BY expression WHILE expression DO statement_ END ';'

    IDENTIFIER    shift, and go to state 12
    INT_LITERAL   shift, and go to state 13
    REAL_LITERAL  shift, and go to state 14
    BOOL_LITERAL  shift, and go to state 15
    '('           shift, and go to state 23

    expression  go to state 78
    relation    go to state 27
    term        go to state 28
    factor      go to state 29
    primary     go to state 30


State 63

   19 statement: REPEAT statement_seq UNTIL • expression ';'

    IDENTIFIER    shift, and go to state 12
    INT_LITERAL   shift, and go to state 13
    REAL_LITERAL  shift, and go to state 14
    BOOL_LITERAL  shift, and go to state 15
    '('           shift, and go to state 23

    expression  go to state 79
    relation    go to state 27
    term        go to state 28
    factor      go to state 29
    primary     go to state 30


State 64

   36 primary: '(' expression ')' •

    $default  reduce using rule 36 (primary)


State 65

   10 body: BEGIN_ statement_ END ';' •

    $default  reduce using rule 10 (body)


State 66

   28 expression: expression ANDOP relation •
   30 relation: relation • RELOP term

    RELOP  shift, and go to state 49

    $default  reduce using rule 28 (expression)


State 67

   30 relation: relation RELOP term •
   32 term: term • ADDOP factor

    ADDOP  shift, and go to state 50

    $default  reduce using rule 30 (relation)


State 68

   32 term: term ADDOP factor •
   34 factor: factor • MULOP primary

    MULOP  shift, and go to state 51

    $default  reduce using rule 32 (term)


State 69

   34 factor: factor MULOP primary •

    $default  reduce using rule 34 (factor)


State 70

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 71

    5 parameters_list: parameters_list ',' IDENTIFIER ':' • type

    REAL     shift, and go to state 52
    BOOLEAN  shift, and go to state 53
    INTEGER  shift, and go to state 54

    type  go to state 80


State 72

   14 statement: REDUCE operator reductions ENDREDUCE •

    $default  reduce using rule 14 (statement)


State 73

   26 reductions: reductions statement_ •

    $default  reduce using rule 26 (reductions)


State 74

   15 statement: IF expression THEN statement_ • ELSE statement_ ENDIF

    ELSE  shift, and go to state 81


State 75

   21 case_list: WHEN • INT_LITERAL ARROW statement_ case_list

    INT_LITERAL  shift, and go to state 82


State 76

   16 statement: CASE expression IS case_list • OTHERWISE ARROW statement_ ENDCASE

    OTHERWISE  shift, and go to state 83


State 77

   17 statement: WHILE expression DO statement_ • END ';'

    END  shift, and go to state 84


State 78

   18 statement: FOR IDENTIFIER ASSIGNMENT expression • BY expression WHILE expression DO statement_ END ';'
   28 expression: expression • ANDOP relation

    ANDOP  shift, and go to state 48
    BY     shift, and go to state 85


State 79

   19 statement: REPEAT statement_seq UNTIL expression • ';'
   28 expression: expression • ANDOP relation

    ANDOP  shift, and go to state 48
    ';'    shift, and go to state 86


State 80

    5 parameters_list: parameters_list ',' IDENTIFIER ':' type •

    $default  reduce using rule 5 (parameters_list)


State 81

   15 statement: IF expression THEN statement_ ELSE • statement_ ENDIF

    error           shift, and go to state 11
    IDENTIFIER      shift, and go to state 12
    INT_LITERAL     shift, and go to state 13
    REAL_LITERAL    shift, and go to state 14
    BOOL_LITERAL    shift, and go to state 15
    REDUCE          shift, and go to state 16
    IF              shift, and go to state 17
    CASE            shift, and go to state 18
    WHILE           shift, and go to state 19
    FOR             shift, and go to state 20
    REPEAT          shift, and go to state 21
    NULL_STATEMENT  shift, and go to state 22
    '('             shift, and go to state 23

    statement_  go to state 87
    statement   go to state 25
    expression  go to state 26
    relation    go to state 27
    term        go to state 28
    factor      go to state 29
    primary     go to state 30


State 82

   21 case_list: WHEN INT_LITERAL • ARROW statement_ case_list

    ARROW  shift, and go to state 88


State 83

   16 statement: CASE expression IS case_list OTHERWISE • ARROW statement_ ENDCASE

    ARROW  shift, and go to state 89


State 84

   17 statement: WHILE expression DO statement_ END • ';'

    ';'  shift, and go to state 90


State 85

   18 statement: FOR IDENTIFIER ASSIGNMENT expression BY • expression WHILE expression DO statement_ END ';'

    IDENTIFIER    shift, and go to state 12
    INT_LITERAL   shift, and go to state 13
    REAL_LITERAL  shift, and go to state 14
    BOOL_LITERAL  shift, and go to state 15
    '('           shift, and go to state 23

    expression  go to state 91
    relation    go to state 27
    term        go to state 28
    factor      go to state 29
    primary     go to state 30


State 86

   19 statement: REPEAT statement_seq UNTIL expression ';' •

    $default  reduce using rule 19 (statement)


State 87

   15 statement: IF expression THEN statement_ ELSE statement_ • ENDIF

    ENDIF  shift, and go to state 92


State 88

   21 case_list: WHEN INT_LITERAL ARROW • statement_ case_list

    error           shift, and go to state 11
    IDENTIFIER      shift, and go to state 12
    INT_LITERAL     shift, and go to state 13
    REAL_LITERAL    shift, and go to state 14
    BOOL_LITERAL    shift, and go to state 15
    REDUCE          shift, and go to state 16
    IF              shift, and go to state 17
    CASE            shift, and go to state 18
    WHILE           shift, and go to state 19
    FOR             shift, and go to state 20
    REPEAT          shift, and go to state 21
    NULL_STATEMENT  shift, and go to state 22
    '('             shift, and go to state 23

    statement_  go to state 93
    statement   go to state 25
    expression  go to state 26
    relation    go to state 27
    term        go to state 28
    factor      go to state 29
    primary     go to state 30


State 89

   16 statement: CASE expression IS case_list OTHERWISE ARROW • statement_ ENDCASE

    error           shift, and go to state 11
    IDENTIFIER      shift, and go to state 12
    INT_LITERAL     shift, and go to state 13
    REAL_LITERAL    shift, and go to state 14
    BOOL_LITERAL    shift, and go to state 15
    REDUCE          shift, and go to state 16
    IF              shift, and go to state 17
    CASE            shift, and go to state 18
    WHILE           shift, and go to state 19
    FOR             shift, and go to state 20
    REPEAT          shift, and go to state 21
    NULL_STATEMENT  shift, and go to state 22
    '('             shift, and go to state 23

    statement_  go to state 94
    statement   go to state 25
    expression  go to state 26
    relation    go to state 27
    term        go to state 28
    factor      go to state 29
    primary     go to state 30


State 90

   17 statement: WHILE expression DO statement_ END ';' •

    $default  reduce using rule 17 (statement)


State 91

   18 statement: FOR IDENTIFIER ASSIGNMENT expression BY expression • WHILE expression DO statement_ END ';'
   28 expression: expression • ANDOP relation

    ANDOP  shift, and go to state 48
    WHILE  shift, and go to state 95


State 92

   15 statement: IF expression THEN statement_ ELSE statement_ ENDIF •

    $default  reduce using rule 15 (statement)


State 93

   21 case_list: WHEN INT_LITERAL ARROW statement_ • case_list

    WHEN  shift, and go to state 75

    $default  reduce using rule 22 (case_list)

    case_list  go to state 96


State 94

   16 statement: CASE expression IS case_list OTHERWISE ARROW statement_ • ENDCASE

    ENDCASE  shift, and go to state 97


State 95

   18 statement: FOR IDENTIFIER ASSIGNMENT expression BY expression WHILE • expression DO statement_ END ';'

    IDENTIFIER    shift, and go to state 12
    INT_LITERAL   shift, and go to state 13
    REAL_LITERAL  shift, and go to state 14
    BOOL_LITERAL  shift, and go to state 15
    '('           shift, and go to state 23

    expression  go to state 98
    relation    go to state 27
    term        go to state 28
    factor      go to state 29
    primary     go to state 30


State 96

   21 case_list: WHEN INT_LITERAL ARROW statement_ case_list •

    $default  reduce using rule 21 (case_list)


State 97

   16 statement: CASE expression IS case_list OTHERWISE ARROW statement_ ENDCASE •

    $default  reduce using rule 16 (statement)


State 98

   18 statement: FOR IDENTIFIER ASSIGNMENT expression BY expression WHILE expression • DO statement_ END ';'
   28 expression: expression • ANDOP relation

    ANDOP  shift, and go to state 48
    DO     shift, and go to state 99


State 99

   18 statement: FOR IDENTIFIER ASSIGNMENT expression BY expression WHILE expression DO • statement_ END ';'

    error           shift, and go to state 11
    IDENTIFIER      shift, and go to state 12
    INT_LITERAL     shift, and go to state 13
    REAL_LITERAL    shift, and go to state 14
    BOOL_LITERAL    shift, and go to state 15
    REDUCE          shift, and go to state 16
    IF              shift, and go to state 17
    CASE            shift, and go to state 18
    WHILE           shift, and go to state 19
    FOR             shift, and go to state 20
    REPEAT          shift, and go to state 21
    NULL_STATEMENT  shift, and go to state 22
    '('             shift, and go to state 23

    statement_  go to state 100
    statement   go to state 25
    expression  go to state 26
    relation    go to state 27
    term        go to state 28
    factor      go to state 29
    primary     go to state 30


State 100

   18 statement: FOR IDENTIFIER ASSIGNMENT expression BY expression WHILE expression DO statement_ • END ';'

    END  shift, and go to state 101


State 101

   18 statement: FOR IDENTIFIER ASSIGNMENT expression BY expression WHILE expression DO statement_ END • ';'

    ';'  shift, and go to state 102


State 102

   18 statement: FOR IDENTIFIER ASSIGNMENT expression BY expression WHILE expression DO statement_ END ';' •

    $default  reduce using rule 18 (statement)
