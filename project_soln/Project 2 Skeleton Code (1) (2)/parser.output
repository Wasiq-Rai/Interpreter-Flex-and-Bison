Rules useless in parser due to conflicts

   39 primary: REAL_LITERAL
   40        | BOOL_LITERAL


State 21 conflicts: 17 reduce/reduce
State 22 conflicts: 17 reduce/reduce


Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';'

    3 optional_variable: variable
    4                  | ε

    5 variable: IDENTIFIER ':' type IS expression ';'

    6 type: INTEGER
    7     | BOOLEAN
    8     | REAL

    9 body: BEGIN_ statement_ END ';'

   10 statement_: statement ';'
   11           | error ';'

   12 statement: expression
   13          | REDUCE operator reductions ENDREDUCE
   14          | IF expression THEN statement ELSE statement ENDIF ';'
   15          | CASE expression IS case_list OTHERWISE statement ENDCASE ';'
   16          | WHILE expression DO statement END ';'
   17          | FOR IDENTIFIER ASSIGNMENT expression BY expression WHILE expression DO statement END ';'
   18          | REPEAT statement_seq UNTIL expression ';'
   19          | NULL_STATEMENT ';'

   20 case_list: WHEN INT_LITERAL ARROW statement case_list
   21          | ε

   22 operator: ADDOP
   23         | MULOP

   24 reductions: reductions statement_
   25           | ε

   26 expression: expression ANDOP relation
   27           | relation

   28 relation: relation RELOP term
   29         | term

   30 term: term ADDOP factor
   31     | factor

   32 factor: factor MULOP primary
   33       | primary

   34 primary: '(' expression ')'
   35        | INT_LITERAL
   36        | REAL_LITERAL
   37        | BOOL_LITERAL
   38        | IDENTIFIER
   39        | REAL_LITERAL
   40        | BOOL_LITERAL


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 34
    ')' (41) 34
    ':' (58) 5
    ';' (59) 2 5 9 10 11 14 15 16 17 18 19
    error (256) 11
    IDENTIFIER (258) 2 5 17 38
    INT_LITERAL (259) 20 35
    REAL_LITERAL (260) 36 39
    BOOL_LITERAL (261) 37 40
    ADDOP (262) 22 30
    MULOP (263) 23 32
    RELOP (264) 28
    ANDOP (265) 26
    REAL (266) 8
    BEGIN_ (267) 9
    BOOLEAN (268) 7
    END (269) 9 16 17
    ENDREDUCE (270) 13
    FUNCTION (271) 2
    INTEGER (272) 6
    IS (273) 5 15
    REDUCE (274) 13
    RETURNS (275) 2
    ASSIGNMENT (276) 17
    IF (277) 14
    THEN (278) 14
    ELSE (279) 14
    ENDIF (280) 14
    CASE (281) 15
    WHEN (282) 20
    ARROW (283) 20
    OTHERWISE (284) 15
    ENDCASE (285) 15
    WHILE (286) 16 17
    DO (287) 16 17
    FOR (288) 17
    BY (289) 17
    REPEAT (290) 18
    UNTIL (291) 18
    NULL_STATEMENT (292) 19
    statement_seq (293) 18


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    function (44)
        on left: 1
        on right: 0
    function_header (45)
        on left: 2
        on right: 1
    optional_variable (46)
        on left: 3 4
        on right: 1
    variable (47)
        on left: 5
        on right: 3
    type (48)
        on left: 6 7 8
        on right: 2 5
    body (49)
        on left: 9
        on right: 1
    statement_ (50)
        on left: 10 11
        on right: 9 24
    statement (51)
        on left: 12 13 14 15 16 17 18 19
        on right: 10 14 15 16 17 20
    case_list (52)
        on left: 20 21
        on right: 15 20
    operator (53)
        on left: 22 23
        on right: 13
    reductions (54)
        on left: 24 25
        on right: 13 24
    expression (55)
        on left: 26 27
        on right: 5 12 14 15 16 17 18 26 34
    relation (56)
        on left: 28 29
        on right: 26 27 28
    term (57)
        on left: 30 31
        on right: 28 29 30
    factor (58)
        on left: 32 33
        on right: 30 31 32
    primary (59)
        on left: 34 35 36 37 38 39 40
        on right: 32 33


State 0

    0 $accept: • function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    2 function_header: FUNCTION • IDENTIFIER RETURNS type ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function • $end

    $end  shift, and go to state 5


State 3

    1 function: function_header • optional_variable body

    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 4 (optional_variable)

    optional_variable  go to state 7
    variable           go to state 8


State 4

    2 function_header: FUNCTION IDENTIFIER • RETURNS type ';'

    RETURNS  shift, and go to state 9


State 5

    0 $accept: function $end •

    $default  accept


State 6

    5 variable: IDENTIFIER • ':' type IS expression ';'

    ':'  shift, and go to state 10


State 7

    1 function: function_header optional_variable • body

    BEGIN_  shift, and go to state 11

    body  go to state 12


State 8

    3 optional_variable: variable •

    $default  reduce using rule 3 (optional_variable)


State 9

    2 function_header: FUNCTION IDENTIFIER RETURNS • type ';'

    REAL     shift, and go to state 13
    BOOLEAN  shift, and go to state 14
    INTEGER  shift, and go to state 15

    type  go to state 16


State 10

    5 variable: IDENTIFIER ':' • type IS expression ';'

    REAL     shift, and go to state 13
    BOOLEAN  shift, and go to state 14
    INTEGER  shift, and go to state 15

    type  go to state 17


State 11

    9 body: BEGIN_ • statement_ END ';'

    error           shift, and go to state 18
    IDENTIFIER      shift, and go to state 19
    INT_LITERAL     shift, and go to state 20
    REAL_LITERAL    shift, and go to state 21
    BOOL_LITERAL    shift, and go to state 22
    REDUCE          shift, and go to state 23
    IF              shift, and go to state 24
    CASE            shift, and go to state 25
    WHILE           shift, and go to state 26
    FOR             shift, and go to state 27
    REPEAT          shift, and go to state 28
    NULL_STATEMENT  shift, and go to state 29
    '('             shift, and go to state 30

    statement_  go to state 31
    statement   go to state 32
    expression  go to state 33
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    primary     go to state 37


State 12

    1 function: function_header optional_variable body •

    $default  reduce using rule 1 (function)


State 13

    8 type: REAL •

    $default  reduce using rule 8 (type)


State 14

    7 type: BOOLEAN •

    $default  reduce using rule 7 (type)


State 15

    6 type: INTEGER •

    $default  reduce using rule 6 (type)


State 16

    2 function_header: FUNCTION IDENTIFIER RETURNS type • ';'

    ';'  shift, and go to state 38


State 17

    5 variable: IDENTIFIER ':' type • IS expression ';'

    IS  shift, and go to state 39


State 18

   11 statement_: error • ';'

    ';'  shift, and go to state 40


State 19

   38 primary: IDENTIFIER •

    $default  reduce using rule 38 (primary)


State 20

   35 primary: INT_LITERAL •

    $default  reduce using rule 35 (primary)


State 21

   36 primary: REAL_LITERAL •
   39        | REAL_LITERAL •

    ADDOP      reduce using rule 36 (primary)
    ADDOP      [reduce using rule 39 (primary)]
    MULOP      reduce using rule 36 (primary)
    MULOP      [reduce using rule 39 (primary)]
    RELOP      reduce using rule 36 (primary)
    RELOP      [reduce using rule 39 (primary)]
    ANDOP      reduce using rule 36 (primary)
    ANDOP      [reduce using rule 39 (primary)]
    END        reduce using rule 36 (primary)
    END        [reduce using rule 39 (primary)]
    IS         reduce using rule 36 (primary)
    IS         [reduce using rule 39 (primary)]
    THEN       reduce using rule 36 (primary)
    THEN       [reduce using rule 39 (primary)]
    ELSE       reduce using rule 36 (primary)
    ELSE       [reduce using rule 39 (primary)]
    ENDIF      reduce using rule 36 (primary)
    ENDIF      [reduce using rule 39 (primary)]
    WHEN       reduce using rule 36 (primary)
    WHEN       [reduce using rule 39 (primary)]
    OTHERWISE  reduce using rule 36 (primary)
    OTHERWISE  [reduce using rule 39 (primary)]
    ENDCASE    reduce using rule 36 (primary)
    ENDCASE    [reduce using rule 39 (primary)]
    WHILE      reduce using rule 36 (primary)
    WHILE      [reduce using rule 39 (primary)]
    DO         reduce using rule 36 (primary)
    DO         [reduce using rule 39 (primary)]
    BY         reduce using rule 36 (primary)
    BY         [reduce using rule 39 (primary)]
    ';'        reduce using rule 36 (primary)
    ';'        [reduce using rule 39 (primary)]
    ')'        reduce using rule 36 (primary)
    ')'        [reduce using rule 39 (primary)]
    $default   reduce using rule 36 (primary)


State 22

   37 primary: BOOL_LITERAL •
   40        | BOOL_LITERAL •

    ADDOP      reduce using rule 37 (primary)
    ADDOP      [reduce using rule 40 (primary)]
    MULOP      reduce using rule 37 (primary)
    MULOP      [reduce using rule 40 (primary)]
    RELOP      reduce using rule 37 (primary)
    RELOP      [reduce using rule 40 (primary)]
    ANDOP      reduce using rule 37 (primary)
    ANDOP      [reduce using rule 40 (primary)]
    END        reduce using rule 37 (primary)
    END        [reduce using rule 40 (primary)]
    IS         reduce using rule 37 (primary)
    IS         [reduce using rule 40 (primary)]
    THEN       reduce using rule 37 (primary)
    THEN       [reduce using rule 40 (primary)]
    ELSE       reduce using rule 37 (primary)
    ELSE       [reduce using rule 40 (primary)]
    ENDIF      reduce using rule 37 (primary)
    ENDIF      [reduce using rule 40 (primary)]
    WHEN       reduce using rule 37 (primary)
    WHEN       [reduce using rule 40 (primary)]
    OTHERWISE  reduce using rule 37 (primary)
    OTHERWISE  [reduce using rule 40 (primary)]
    ENDCASE    reduce using rule 37 (primary)
    ENDCASE    [reduce using rule 40 (primary)]
    WHILE      reduce using rule 37 (primary)
    WHILE      [reduce using rule 40 (primary)]
    DO         reduce using rule 37 (primary)
    DO         [reduce using rule 40 (primary)]
    BY         reduce using rule 37 (primary)
    BY         [reduce using rule 40 (primary)]
    ';'        reduce using rule 37 (primary)
    ';'        [reduce using rule 40 (primary)]
    ')'        reduce using rule 37 (primary)
    ')'        [reduce using rule 40 (primary)]
    $default   reduce using rule 37 (primary)


State 23

   13 statement: REDUCE • operator reductions ENDREDUCE

    ADDOP  shift, and go to state 41
    MULOP  shift, and go to state 42

    operator  go to state 43


State 24

   14 statement: IF • expression THEN statement ELSE statement ENDIF ';'

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 30

    expression  go to state 44
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    primary     go to state 37


State 25

   15 statement: CASE • expression IS case_list OTHERWISE statement ENDCASE ';'

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 30

    expression  go to state 45
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    primary     go to state 37


State 26

   16 statement: WHILE • expression DO statement END ';'

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 30

    expression  go to state 46
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    primary     go to state 37


State 27

   17 statement: FOR • IDENTIFIER ASSIGNMENT expression BY expression WHILE expression DO statement END ';'

    IDENTIFIER  shift, and go to state 47


State 28

   18 statement: REPEAT • statement_seq UNTIL expression ';'

    statement_seq  shift, and go to state 48


State 29

   19 statement: NULL_STATEMENT • ';'

    ';'  shift, and go to state 49


State 30

   34 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 30

    expression  go to state 50
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    primary     go to state 37


State 31

    9 body: BEGIN_ statement_ • END ';'

    END  shift, and go to state 51


State 32

   10 statement_: statement • ';'

    ';'  shift, and go to state 52


State 33

   12 statement: expression •
   26 expression: expression • ANDOP relation

    ANDOP  shift, and go to state 53

    $default  reduce using rule 12 (statement)


State 34

   27 expression: relation •
   28 relation: relation • RELOP term

    RELOP  shift, and go to state 54

    $default  reduce using rule 27 (expression)


State 35

   29 relation: term •
   30 term: term • ADDOP factor

    ADDOP  shift, and go to state 55

    $default  reduce using rule 29 (relation)


State 36

   31 term: factor •
   32 factor: factor • MULOP primary

    MULOP  shift, and go to state 56

    $default  reduce using rule 31 (term)


State 37

   33 factor: primary •

    $default  reduce using rule 33 (factor)


State 38

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 39

    5 variable: IDENTIFIER ':' type IS • expression ';'

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 30

    expression  go to state 57
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    primary     go to state 37


State 40

   11 statement_: error ';' •

    $default  reduce using rule 11 (statement_)


State 41

   22 operator: ADDOP •

    $default  reduce using rule 22 (operator)


State 42

   23 operator: MULOP •

    $default  reduce using rule 23 (operator)


State 43

   13 statement: REDUCE operator • reductions ENDREDUCE

    $default  reduce using rule 25 (reductions)

    reductions  go to state 58


State 44

   14 statement: IF expression • THEN statement ELSE statement ENDIF ';'
   26 expression: expression • ANDOP relation

    ANDOP  shift, and go to state 53
    THEN   shift, and go to state 59


State 45

   15 statement: CASE expression • IS case_list OTHERWISE statement ENDCASE ';'
   26 expression: expression • ANDOP relation

    ANDOP  shift, and go to state 53
    IS     shift, and go to state 60


State 46

   16 statement: WHILE expression • DO statement END ';'
   26 expression: expression • ANDOP relation

    ANDOP  shift, and go to state 53
    DO     shift, and go to state 61


State 47

   17 statement: FOR IDENTIFIER • ASSIGNMENT expression BY expression WHILE expression DO statement END ';'

    ASSIGNMENT  shift, and go to state 62


State 48

   18 statement: REPEAT statement_seq • UNTIL expression ';'

    UNTIL  shift, and go to state 63


State 49

   19 statement: NULL_STATEMENT ';' •

    $default  reduce using rule 19 (statement)


State 50

   26 expression: expression • ANDOP relation
   34 primary: '(' expression • ')'

    ANDOP  shift, and go to state 53
    ')'    shift, and go to state 64


State 51

    9 body: BEGIN_ statement_ END • ';'

    ';'  shift, and go to state 65


State 52

   10 statement_: statement ';' •

    $default  reduce using rule 10 (statement_)


State 53

   26 expression: expression ANDOP • relation

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 30

    relation  go to state 66
    term      go to state 35
    factor    go to state 36
    primary   go to state 37


State 54

   28 relation: relation RELOP • term

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 30

    term     go to state 67
    factor   go to state 36
    primary  go to state 37


State 55

   30 term: term ADDOP • factor

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 30

    factor   go to state 68
    primary  go to state 37


State 56

   32 factor: factor MULOP • primary

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 30

    primary  go to state 69


State 57

    5 variable: IDENTIFIER ':' type IS expression • ';'
   26 expression: expression • ANDOP relation

    ANDOP  shift, and go to state 53
    ';'    shift, and go to state 70


State 58

   13 statement: REDUCE operator reductions • ENDREDUCE
   24 reductions: reductions • statement_

    error           shift, and go to state 18
    IDENTIFIER      shift, and go to state 19
    INT_LITERAL     shift, and go to state 20
    REAL_LITERAL    shift, and go to state 21
    BOOL_LITERAL    shift, and go to state 22
    ENDREDUCE       shift, and go to state 71
    REDUCE          shift, and go to state 23
    IF              shift, and go to state 24
    CASE            shift, and go to state 25
    WHILE           shift, and go to state 26
    FOR             shift, and go to state 27
    REPEAT          shift, and go to state 28
    NULL_STATEMENT  shift, and go to state 29
    '('             shift, and go to state 30

    statement_  go to state 72
    statement   go to state 32
    expression  go to state 33
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    primary     go to state 37


State 59

   14 statement: IF expression THEN • statement ELSE statement ENDIF ';'

    IDENTIFIER      shift, and go to state 19
    INT_LITERAL     shift, and go to state 20
    REAL_LITERAL    shift, and go to state 21
    BOOL_LITERAL    shift, and go to state 22
    REDUCE          shift, and go to state 23
    IF              shift, and go to state 24
    CASE            shift, and go to state 25
    WHILE           shift, and go to state 26
    FOR             shift, and go to state 27
    REPEAT          shift, and go to state 28
    NULL_STATEMENT  shift, and go to state 29
    '('             shift, and go to state 30

    statement   go to state 73
    expression  go to state 33
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    primary     go to state 37


State 60

   15 statement: CASE expression IS • case_list OTHERWISE statement ENDCASE ';'

    WHEN  shift, and go to state 74

    $default  reduce using rule 21 (case_list)

    case_list  go to state 75


State 61

   16 statement: WHILE expression DO • statement END ';'

    IDENTIFIER      shift, and go to state 19
    INT_LITERAL     shift, and go to state 20
    REAL_LITERAL    shift, and go to state 21
    BOOL_LITERAL    shift, and go to state 22
    REDUCE          shift, and go to state 23
    IF              shift, and go to state 24
    CASE            shift, and go to state 25
    WHILE           shift, and go to state 26
    FOR             shift, and go to state 27
    REPEAT          shift, and go to state 28
    NULL_STATEMENT  shift, and go to state 29
    '('             shift, and go to state 30

    statement   go to state 76
    expression  go to state 33
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    primary     go to state 37


State 62

   17 statement: FOR IDENTIFIER ASSIGNMENT • expression BY expression WHILE expression DO statement END ';'

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 30

    expression  go to state 77
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    primary     go to state 37


State 63

   18 statement: REPEAT statement_seq UNTIL • expression ';'

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 30

    expression  go to state 78
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    primary     go to state 37


State 64

   34 primary: '(' expression ')' •

    $default  reduce using rule 34 (primary)


State 65

    9 body: BEGIN_ statement_ END ';' •

    $default  reduce using rule 9 (body)


State 66

   26 expression: expression ANDOP relation •
   28 relation: relation • RELOP term

    RELOP  shift, and go to state 54

    $default  reduce using rule 26 (expression)


State 67

   28 relation: relation RELOP term •
   30 term: term • ADDOP factor

    ADDOP  shift, and go to state 55

    $default  reduce using rule 28 (relation)


State 68

   30 term: term ADDOP factor •
   32 factor: factor • MULOP primary

    MULOP  shift, and go to state 56

    $default  reduce using rule 30 (term)


State 69

   32 factor: factor MULOP primary •

    $default  reduce using rule 32 (factor)


State 70

    5 variable: IDENTIFIER ':' type IS expression ';' •

    $default  reduce using rule 5 (variable)


State 71

   13 statement: REDUCE operator reductions ENDREDUCE •

    $default  reduce using rule 13 (statement)


State 72

   24 reductions: reductions statement_ •

    $default  reduce using rule 24 (reductions)


State 73

   14 statement: IF expression THEN statement • ELSE statement ENDIF ';'

    ELSE  shift, and go to state 79


State 74

   20 case_list: WHEN • INT_LITERAL ARROW statement case_list

    INT_LITERAL  shift, and go to state 80


State 75

   15 statement: CASE expression IS case_list • OTHERWISE statement ENDCASE ';'

    OTHERWISE  shift, and go to state 81


State 76

   16 statement: WHILE expression DO statement • END ';'

    END  shift, and go to state 82


State 77

   17 statement: FOR IDENTIFIER ASSIGNMENT expression • BY expression WHILE expression DO statement END ';'
   26 expression: expression • ANDOP relation

    ANDOP  shift, and go to state 53
    BY     shift, and go to state 83


State 78

   18 statement: REPEAT statement_seq UNTIL expression • ';'
   26 expression: expression • ANDOP relation

    ANDOP  shift, and go to state 53
    ';'    shift, and go to state 84


State 79

   14 statement: IF expression THEN statement ELSE • statement ENDIF ';'

    IDENTIFIER      shift, and go to state 19
    INT_LITERAL     shift, and go to state 20
    REAL_LITERAL    shift, and go to state 21
    BOOL_LITERAL    shift, and go to state 22
    REDUCE          shift, and go to state 23
    IF              shift, and go to state 24
    CASE            shift, and go to state 25
    WHILE           shift, and go to state 26
    FOR             shift, and go to state 27
    REPEAT          shift, and go to state 28
    NULL_STATEMENT  shift, and go to state 29
    '('             shift, and go to state 30

    statement   go to state 85
    expression  go to state 33
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    primary     go to state 37


State 80

   20 case_list: WHEN INT_LITERAL • ARROW statement case_list

    ARROW  shift, and go to state 86


State 81

   15 statement: CASE expression IS case_list OTHERWISE • statement ENDCASE ';'

    IDENTIFIER      shift, and go to state 19
    INT_LITERAL     shift, and go to state 20
    REAL_LITERAL    shift, and go to state 21
    BOOL_LITERAL    shift, and go to state 22
    REDUCE          shift, and go to state 23
    IF              shift, and go to state 24
    CASE            shift, and go to state 25
    WHILE           shift, and go to state 26
    FOR             shift, and go to state 27
    REPEAT          shift, and go to state 28
    NULL_STATEMENT  shift, and go to state 29
    '('             shift, and go to state 30

    statement   go to state 87
    expression  go to state 33
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    primary     go to state 37


State 82

   16 statement: WHILE expression DO statement END • ';'

    ';'  shift, and go to state 88


State 83

   17 statement: FOR IDENTIFIER ASSIGNMENT expression BY • expression WHILE expression DO statement END ';'

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 30

    expression  go to state 89
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    primary     go to state 37


State 84

   18 statement: REPEAT statement_seq UNTIL expression ';' •

    $default  reduce using rule 18 (statement)


State 85

   14 statement: IF expression THEN statement ELSE statement • ENDIF ';'

    ENDIF  shift, and go to state 90


State 86

   20 case_list: WHEN INT_LITERAL ARROW • statement case_list

    IDENTIFIER      shift, and go to state 19
    INT_LITERAL     shift, and go to state 20
    REAL_LITERAL    shift, and go to state 21
    BOOL_LITERAL    shift, and go to state 22
    REDUCE          shift, and go to state 23
    IF              shift, and go to state 24
    CASE            shift, and go to state 25
    WHILE           shift, and go to state 26
    FOR             shift, and go to state 27
    REPEAT          shift, and go to state 28
    NULL_STATEMENT  shift, and go to state 29
    '('             shift, and go to state 30

    statement   go to state 91
    expression  go to state 33
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    primary     go to state 37


State 87

   15 statement: CASE expression IS case_list OTHERWISE statement • ENDCASE ';'

    ENDCASE  shift, and go to state 92


State 88

   16 statement: WHILE expression DO statement END ';' •

    $default  reduce using rule 16 (statement)


State 89

   17 statement: FOR IDENTIFIER ASSIGNMENT expression BY expression • WHILE expression DO statement END ';'
   26 expression: expression • ANDOP relation

    ANDOP  shift, and go to state 53
    WHILE  shift, and go to state 93


State 90

   14 statement: IF expression THEN statement ELSE statement ENDIF • ';'

    ';'  shift, and go to state 94


State 91

   20 case_list: WHEN INT_LITERAL ARROW statement • case_list

    WHEN  shift, and go to state 74

    $default  reduce using rule 21 (case_list)

    case_list  go to state 95


State 92

   15 statement: CASE expression IS case_list OTHERWISE statement ENDCASE • ';'

    ';'  shift, and go to state 96


State 93

   17 statement: FOR IDENTIFIER ASSIGNMENT expression BY expression WHILE • expression DO statement END ';'

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 30

    expression  go to state 97
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    primary     go to state 37


State 94

   14 statement: IF expression THEN statement ELSE statement ENDIF ';' •

    $default  reduce using rule 14 (statement)


State 95

   20 case_list: WHEN INT_LITERAL ARROW statement case_list •

    $default  reduce using rule 20 (case_list)


State 96

   15 statement: CASE expression IS case_list OTHERWISE statement ENDCASE ';' •

    $default  reduce using rule 15 (statement)


State 97

   17 statement: FOR IDENTIFIER ASSIGNMENT expression BY expression WHILE expression • DO statement END ';'
   26 expression: expression • ANDOP relation

    ANDOP  shift, and go to state 53
    DO     shift, and go to state 98


State 98

   17 statement: FOR IDENTIFIER ASSIGNMENT expression BY expression WHILE expression DO • statement END ';'

    IDENTIFIER      shift, and go to state 19
    INT_LITERAL     shift, and go to state 20
    REAL_LITERAL    shift, and go to state 21
    BOOL_LITERAL    shift, and go to state 22
    REDUCE          shift, and go to state 23
    IF              shift, and go to state 24
    CASE            shift, and go to state 25
    WHILE           shift, and go to state 26
    FOR             shift, and go to state 27
    REPEAT          shift, and go to state 28
    NULL_STATEMENT  shift, and go to state 29
    '('             shift, and go to state 30

    statement   go to state 99
    expression  go to state 33
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    primary     go to state 37


State 99

   17 statement: FOR IDENTIFIER ASSIGNMENT expression BY expression WHILE expression DO statement • END ';'

    END  shift, and go to state 100


State 100

   17 statement: FOR IDENTIFIER ASSIGNMENT expression BY expression WHILE expression DO statement END • ';'

    ';'  shift, and go to state 101


State 101

   17 statement: FOR IDENTIFIER ASSIGNMENT expression BY expression WHILE expression DO statement END ';' •

    $default  reduce using rule 17 (statement)
