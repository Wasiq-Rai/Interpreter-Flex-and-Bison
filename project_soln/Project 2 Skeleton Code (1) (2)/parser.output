Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';'

    3 optional_variable: variable
    4                  | ε

    5 variable: IDENTIFIER ':' type IS statement ';'

    6 type: INTEGER
    7     | BOOLEAN
    8     | REAL

    9 body: BEGIN_ statement_ END ';'

   10 statement_: statement ';'
   11           | error ';'

   12 statement: expression
   13          | REDUCE operator reductions ENDREDUCE
   14          | IF expression THEN statement_ ELSE statement_ ENDIF
   15          | CASE expression IS case_list OTHERWISE statement_ ENDCASE ';'
   16          | WHILE expression DO statement_ END ';'
   17          | FOR IDENTIFIER ASSIGNMENT expression BY expression WHILE expression DO statement_ END ';'
   18          | REPEAT statement_seq UNTIL expression ';'
   19          | NULL_STATEMENT ';'

   20 case_list: WHEN INT_LITERAL ARROW statement case_list
   21          | ε

   22 operator: ADDOP
   23         | MULOP
   24         | RELOP

   25 reductions: reductions statement_
   26           | ε

   27 expression: expression ANDOP relation
   28           | relation

   29 relation: relation RELOP term
   30         | term

   31 term: term ADDOP factor
   32     | factor

   33 factor: factor MULOP primary
   34       | primary

   35 primary: '(' expression ')'
   36        | INT_LITERAL
   37        | REAL_LITERAL
   38        | BOOL_LITERAL
   39        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 35
    ')' (41) 35
    ':' (58) 5
    ';' (59) 2 5 9 10 11 15 16 17 18 19
    error (256) 11
    IDENTIFIER (258) 2 5 17 39
    INT_LITERAL (259) 20 36
    REAL_LITERAL (260) 37
    BOOL_LITERAL (261) 38
    ADDOP (262) 22 31
    MULOP (263) 23 33
    RELOP (264) 24 29
    ANDOP (265) 27
    IS (266) 5 15
    REAL (267) 8
    BEGIN_ (268) 9
    BOOLEAN (269) 7
    END (270) 9 16 17
    ENDREDUCE (271) 13
    FUNCTION (272) 2
    INTEGER (273) 6
    REDUCE (274) 13
    RETURNS (275) 2
    ASSIGNMENT (276) 17
    IF (277) 14
    THEN (278) 14
    ELSE (279) 14
    ENDIF (280) 14
    CASE (281) 15
    WHEN (282) 20
    ARROW (283) 20
    OTHERWISE (284) 15
    ENDCASE (285) 15
    WHILE (286) 16 17
    DO (287) 16 17
    FOR (288) 17
    BY (289) 17
    REPEAT (290) 18
    UNTIL (291) 18
    NULL_STATEMENT (292) 19
    statement_seq (293) 18


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    function (44)
        on left: 1
        on right: 0
    function_header (45)
        on left: 2
        on right: 1
    optional_variable (46)
        on left: 3 4
        on right: 1
    variable (47)
        on left: 5
        on right: 3
    type (48)
        on left: 6 7 8
        on right: 2 5
    body (49)
        on left: 9
        on right: 1
    statement_ (50)
        on left: 10 11
        on right: 9 14 15 16 17 25
    statement (51)
        on left: 12 13 14 15 16 17 18 19
        on right: 5 10 20
    case_list (52)
        on left: 20 21
        on right: 15 20
    operator (53)
        on left: 22 23 24
        on right: 13
    reductions (54)
        on left: 25 26
        on right: 13 25
    expression (55)
        on left: 27 28
        on right: 12 14 15 16 17 18 27 35
    relation (56)
        on left: 29 30
        on right: 27 28 29
    term (57)
        on left: 31 32
        on right: 29 30 31
    factor (58)
        on left: 33 34
        on right: 31 32 33
    primary (59)
        on left: 35 36 37 38 39
        on right: 33 34


State 0

    0 $accept: • function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    2 function_header: FUNCTION • IDENTIFIER RETURNS type ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function • $end

    $end  shift, and go to state 5


State 3

    1 function: function_header • optional_variable body

    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 4 (optional_variable)

    optional_variable  go to state 7
    variable           go to state 8


State 4

    2 function_header: FUNCTION IDENTIFIER • RETURNS type ';'

    RETURNS  shift, and go to state 9


State 5

    0 $accept: function $end •

    $default  accept


State 6

    5 variable: IDENTIFIER • ':' type IS statement ';'

    ':'  shift, and go to state 10


State 7

    1 function: function_header optional_variable • body

    BEGIN_  shift, and go to state 11

    body  go to state 12


State 8

    3 optional_variable: variable •

    $default  reduce using rule 3 (optional_variable)


State 9

    2 function_header: FUNCTION IDENTIFIER RETURNS • type ';'

    REAL     shift, and go to state 13
    BOOLEAN  shift, and go to state 14
    INTEGER  shift, and go to state 15

    type  go to state 16


State 10

    5 variable: IDENTIFIER ':' • type IS statement ';'

    REAL     shift, and go to state 13
    BOOLEAN  shift, and go to state 14
    INTEGER  shift, and go to state 15

    type  go to state 17


State 11

    9 body: BEGIN_ • statement_ END ';'

    error           shift, and go to state 18
    IDENTIFIER      shift, and go to state 19
    INT_LITERAL     shift, and go to state 20
    REAL_LITERAL    shift, and go to state 21
    BOOL_LITERAL    shift, and go to state 22
    REDUCE          shift, and go to state 23
    IF              shift, and go to state 24
    CASE            shift, and go to state 25
    WHILE           shift, and go to state 26
    FOR             shift, and go to state 27
    REPEAT          shift, and go to state 28
    NULL_STATEMENT  shift, and go to state 29
    '('             shift, and go to state 30

    statement_  go to state 31
    statement   go to state 32
    expression  go to state 33
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    primary     go to state 37


State 12

    1 function: function_header optional_variable body •

    $default  reduce using rule 1 (function)


State 13

    8 type: REAL •

    $default  reduce using rule 8 (type)


State 14

    7 type: BOOLEAN •

    $default  reduce using rule 7 (type)


State 15

    6 type: INTEGER •

    $default  reduce using rule 6 (type)


State 16

    2 function_header: FUNCTION IDENTIFIER RETURNS type • ';'

    ';'  shift, and go to state 38


State 17

    5 variable: IDENTIFIER ':' type • IS statement ';'

    IS  shift, and go to state 39


State 18

   11 statement_: error • ';'

    ';'  shift, and go to state 40


State 19

   39 primary: IDENTIFIER •

    $default  reduce using rule 39 (primary)


State 20

   36 primary: INT_LITERAL •

    $default  reduce using rule 36 (primary)


State 21

   37 primary: REAL_LITERAL •

    $default  reduce using rule 37 (primary)


State 22

   38 primary: BOOL_LITERAL •

    $default  reduce using rule 38 (primary)


State 23

   13 statement: REDUCE • operator reductions ENDREDUCE

    ADDOP  shift, and go to state 41
    MULOP  shift, and go to state 42
    RELOP  shift, and go to state 43

    operator  go to state 44


State 24

   14 statement: IF • expression THEN statement_ ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 30

    expression  go to state 45
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    primary     go to state 37


State 25

   15 statement: CASE • expression IS case_list OTHERWISE statement_ ENDCASE ';'

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 30

    expression  go to state 46
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    primary     go to state 37


State 26

   16 statement: WHILE • expression DO statement_ END ';'

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 30

    expression  go to state 47
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    primary     go to state 37


State 27

   17 statement: FOR • IDENTIFIER ASSIGNMENT expression BY expression WHILE expression DO statement_ END ';'

    IDENTIFIER  shift, and go to state 48


State 28

   18 statement: REPEAT • statement_seq UNTIL expression ';'

    statement_seq  shift, and go to state 49


State 29

   19 statement: NULL_STATEMENT • ';'

    ';'  shift, and go to state 50


State 30

   35 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 30

    expression  go to state 51
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    primary     go to state 37


State 31

    9 body: BEGIN_ statement_ • END ';'

    END  shift, and go to state 52


State 32

   10 statement_: statement • ';'

    ';'  shift, and go to state 53


State 33

   12 statement: expression •
   27 expression: expression • ANDOP relation

    ANDOP  shift, and go to state 54

    $default  reduce using rule 12 (statement)


State 34

   28 expression: relation •
   29 relation: relation • RELOP term

    RELOP  shift, and go to state 55

    $default  reduce using rule 28 (expression)


State 35

   30 relation: term •
   31 term: term • ADDOP factor

    ADDOP  shift, and go to state 56

    $default  reduce using rule 30 (relation)


State 36

   32 term: factor •
   33 factor: factor • MULOP primary

    MULOP  shift, and go to state 57

    $default  reduce using rule 32 (term)


State 37

   34 factor: primary •

    $default  reduce using rule 34 (factor)


State 38

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 39

    5 variable: IDENTIFIER ':' type IS • statement ';'

    IDENTIFIER      shift, and go to state 19
    INT_LITERAL     shift, and go to state 20
    REAL_LITERAL    shift, and go to state 21
    BOOL_LITERAL    shift, and go to state 22
    REDUCE          shift, and go to state 23
    IF              shift, and go to state 24
    CASE            shift, and go to state 25
    WHILE           shift, and go to state 26
    FOR             shift, and go to state 27
    REPEAT          shift, and go to state 28
    NULL_STATEMENT  shift, and go to state 29
    '('             shift, and go to state 30

    statement   go to state 58
    expression  go to state 33
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    primary     go to state 37


State 40

   11 statement_: error ';' •

    $default  reduce using rule 11 (statement_)


State 41

   22 operator: ADDOP •

    $default  reduce using rule 22 (operator)


State 42

   23 operator: MULOP •

    $default  reduce using rule 23 (operator)


State 43

   24 operator: RELOP •

    $default  reduce using rule 24 (operator)


State 44

   13 statement: REDUCE operator • reductions ENDREDUCE

    $default  reduce using rule 26 (reductions)

    reductions  go to state 59


State 45

   14 statement: IF expression • THEN statement_ ELSE statement_ ENDIF
   27 expression: expression • ANDOP relation

    ANDOP  shift, and go to state 54
    THEN   shift, and go to state 60


State 46

   15 statement: CASE expression • IS case_list OTHERWISE statement_ ENDCASE ';'
   27 expression: expression • ANDOP relation

    ANDOP  shift, and go to state 54
    IS     shift, and go to state 61


State 47

   16 statement: WHILE expression • DO statement_ END ';'
   27 expression: expression • ANDOP relation

    ANDOP  shift, and go to state 54
    DO     shift, and go to state 62


State 48

   17 statement: FOR IDENTIFIER • ASSIGNMENT expression BY expression WHILE expression DO statement_ END ';'

    ASSIGNMENT  shift, and go to state 63


State 49

   18 statement: REPEAT statement_seq • UNTIL expression ';'

    UNTIL  shift, and go to state 64


State 50

   19 statement: NULL_STATEMENT ';' •

    $default  reduce using rule 19 (statement)


State 51

   27 expression: expression • ANDOP relation
   35 primary: '(' expression • ')'

    ANDOP  shift, and go to state 54
    ')'    shift, and go to state 65


State 52

    9 body: BEGIN_ statement_ END • ';'

    ';'  shift, and go to state 66


State 53

   10 statement_: statement ';' •

    $default  reduce using rule 10 (statement_)


State 54

   27 expression: expression ANDOP • relation

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 30

    relation  go to state 67
    term      go to state 35
    factor    go to state 36
    primary   go to state 37


State 55

   29 relation: relation RELOP • term

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 30

    term     go to state 68
    factor   go to state 36
    primary  go to state 37


State 56

   31 term: term ADDOP • factor

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 30

    factor   go to state 69
    primary  go to state 37


State 57

   33 factor: factor MULOP • primary

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 30

    primary  go to state 70


State 58

    5 variable: IDENTIFIER ':' type IS statement • ';'

    ';'  shift, and go to state 71


State 59

   13 statement: REDUCE operator reductions • ENDREDUCE
   25 reductions: reductions • statement_

    error           shift, and go to state 18
    IDENTIFIER      shift, and go to state 19
    INT_LITERAL     shift, and go to state 20
    REAL_LITERAL    shift, and go to state 21
    BOOL_LITERAL    shift, and go to state 22
    ENDREDUCE       shift, and go to state 72
    REDUCE          shift, and go to state 23
    IF              shift, and go to state 24
    CASE            shift, and go to state 25
    WHILE           shift, and go to state 26
    FOR             shift, and go to state 27
    REPEAT          shift, and go to state 28
    NULL_STATEMENT  shift, and go to state 29
    '('             shift, and go to state 30

    statement_  go to state 73
    statement   go to state 32
    expression  go to state 33
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    primary     go to state 37


State 60

   14 statement: IF expression THEN • statement_ ELSE statement_ ENDIF

    error           shift, and go to state 18
    IDENTIFIER      shift, and go to state 19
    INT_LITERAL     shift, and go to state 20
    REAL_LITERAL    shift, and go to state 21
    BOOL_LITERAL    shift, and go to state 22
    REDUCE          shift, and go to state 23
    IF              shift, and go to state 24
    CASE            shift, and go to state 25
    WHILE           shift, and go to state 26
    FOR             shift, and go to state 27
    REPEAT          shift, and go to state 28
    NULL_STATEMENT  shift, and go to state 29
    '('             shift, and go to state 30

    statement_  go to state 74
    statement   go to state 32
    expression  go to state 33
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    primary     go to state 37


State 61

   15 statement: CASE expression IS • case_list OTHERWISE statement_ ENDCASE ';'

    WHEN  shift, and go to state 75

    $default  reduce using rule 21 (case_list)

    case_list  go to state 76


State 62

   16 statement: WHILE expression DO • statement_ END ';'

    error           shift, and go to state 18
    IDENTIFIER      shift, and go to state 19
    INT_LITERAL     shift, and go to state 20
    REAL_LITERAL    shift, and go to state 21
    BOOL_LITERAL    shift, and go to state 22
    REDUCE          shift, and go to state 23
    IF              shift, and go to state 24
    CASE            shift, and go to state 25
    WHILE           shift, and go to state 26
    FOR             shift, and go to state 27
    REPEAT          shift, and go to state 28
    NULL_STATEMENT  shift, and go to state 29
    '('             shift, and go to state 30

    statement_  go to state 77
    statement   go to state 32
    expression  go to state 33
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    primary     go to state 37


State 63

   17 statement: FOR IDENTIFIER ASSIGNMENT • expression BY expression WHILE expression DO statement_ END ';'

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 30

    expression  go to state 78
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    primary     go to state 37


State 64

   18 statement: REPEAT statement_seq UNTIL • expression ';'

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 30

    expression  go to state 79
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    primary     go to state 37


State 65

   35 primary: '(' expression ')' •

    $default  reduce using rule 35 (primary)


State 66

    9 body: BEGIN_ statement_ END ';' •

    $default  reduce using rule 9 (body)


State 67

   27 expression: expression ANDOP relation •
   29 relation: relation • RELOP term

    RELOP  shift, and go to state 55

    $default  reduce using rule 27 (expression)


State 68

   29 relation: relation RELOP term •
   31 term: term • ADDOP factor

    ADDOP  shift, and go to state 56

    $default  reduce using rule 29 (relation)


State 69

   31 term: term ADDOP factor •
   33 factor: factor • MULOP primary

    MULOP  shift, and go to state 57

    $default  reduce using rule 31 (term)


State 70

   33 factor: factor MULOP primary •

    $default  reduce using rule 33 (factor)


State 71

    5 variable: IDENTIFIER ':' type IS statement ';' •

    $default  reduce using rule 5 (variable)


State 72

   13 statement: REDUCE operator reductions ENDREDUCE •

    $default  reduce using rule 13 (statement)


State 73

   25 reductions: reductions statement_ •

    $default  reduce using rule 25 (reductions)


State 74

   14 statement: IF expression THEN statement_ • ELSE statement_ ENDIF

    ELSE  shift, and go to state 80


State 75

   20 case_list: WHEN • INT_LITERAL ARROW statement case_list

    INT_LITERAL  shift, and go to state 81


State 76

   15 statement: CASE expression IS case_list • OTHERWISE statement_ ENDCASE ';'

    OTHERWISE  shift, and go to state 82


State 77

   16 statement: WHILE expression DO statement_ • END ';'

    END  shift, and go to state 83


State 78

   17 statement: FOR IDENTIFIER ASSIGNMENT expression • BY expression WHILE expression DO statement_ END ';'
   27 expression: expression • ANDOP relation

    ANDOP  shift, and go to state 54
    BY     shift, and go to state 84


State 79

   18 statement: REPEAT statement_seq UNTIL expression • ';'
   27 expression: expression • ANDOP relation

    ANDOP  shift, and go to state 54
    ';'    shift, and go to state 85


State 80

   14 statement: IF expression THEN statement_ ELSE • statement_ ENDIF

    error           shift, and go to state 18
    IDENTIFIER      shift, and go to state 19
    INT_LITERAL     shift, and go to state 20
    REAL_LITERAL    shift, and go to state 21
    BOOL_LITERAL    shift, and go to state 22
    REDUCE          shift, and go to state 23
    IF              shift, and go to state 24
    CASE            shift, and go to state 25
    WHILE           shift, and go to state 26
    FOR             shift, and go to state 27
    REPEAT          shift, and go to state 28
    NULL_STATEMENT  shift, and go to state 29
    '('             shift, and go to state 30

    statement_  go to state 86
    statement   go to state 32
    expression  go to state 33
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    primary     go to state 37


State 81

   20 case_list: WHEN INT_LITERAL • ARROW statement case_list

    ARROW  shift, and go to state 87


State 82

   15 statement: CASE expression IS case_list OTHERWISE • statement_ ENDCASE ';'

    error           shift, and go to state 18
    IDENTIFIER      shift, and go to state 19
    INT_LITERAL     shift, and go to state 20
    REAL_LITERAL    shift, and go to state 21
    BOOL_LITERAL    shift, and go to state 22
    REDUCE          shift, and go to state 23
    IF              shift, and go to state 24
    CASE            shift, and go to state 25
    WHILE           shift, and go to state 26
    FOR             shift, and go to state 27
    REPEAT          shift, and go to state 28
    NULL_STATEMENT  shift, and go to state 29
    '('             shift, and go to state 30

    statement_  go to state 88
    statement   go to state 32
    expression  go to state 33
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    primary     go to state 37


State 83

   16 statement: WHILE expression DO statement_ END • ';'

    ';'  shift, and go to state 89


State 84

   17 statement: FOR IDENTIFIER ASSIGNMENT expression BY • expression WHILE expression DO statement_ END ';'

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 30

    expression  go to state 90
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    primary     go to state 37


State 85

   18 statement: REPEAT statement_seq UNTIL expression ';' •

    $default  reduce using rule 18 (statement)


State 86

   14 statement: IF expression THEN statement_ ELSE statement_ • ENDIF

    ENDIF  shift, and go to state 91


State 87

   20 case_list: WHEN INT_LITERAL ARROW • statement case_list

    IDENTIFIER      shift, and go to state 19
    INT_LITERAL     shift, and go to state 20
    REAL_LITERAL    shift, and go to state 21
    BOOL_LITERAL    shift, and go to state 22
    REDUCE          shift, and go to state 23
    IF              shift, and go to state 24
    CASE            shift, and go to state 25
    WHILE           shift, and go to state 26
    FOR             shift, and go to state 27
    REPEAT          shift, and go to state 28
    NULL_STATEMENT  shift, and go to state 29
    '('             shift, and go to state 30

    statement   go to state 92
    expression  go to state 33
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    primary     go to state 37


State 88

   15 statement: CASE expression IS case_list OTHERWISE statement_ • ENDCASE ';'

    ENDCASE  shift, and go to state 93


State 89

   16 statement: WHILE expression DO statement_ END ';' •

    $default  reduce using rule 16 (statement)


State 90

   17 statement: FOR IDENTIFIER ASSIGNMENT expression BY expression • WHILE expression DO statement_ END ';'
   27 expression: expression • ANDOP relation

    ANDOP  shift, and go to state 54
    WHILE  shift, and go to state 94


State 91

   14 statement: IF expression THEN statement_ ELSE statement_ ENDIF •

    $default  reduce using rule 14 (statement)


State 92

   20 case_list: WHEN INT_LITERAL ARROW statement • case_list

    WHEN  shift, and go to state 75

    $default  reduce using rule 21 (case_list)

    case_list  go to state 95


State 93

   15 statement: CASE expression IS case_list OTHERWISE statement_ ENDCASE • ';'

    ';'  shift, and go to state 96


State 94

   17 statement: FOR IDENTIFIER ASSIGNMENT expression BY expression WHILE • expression DO statement_ END ';'

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 30

    expression  go to state 97
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    primary     go to state 37


State 95

   20 case_list: WHEN INT_LITERAL ARROW statement case_list •

    $default  reduce using rule 20 (case_list)


State 96

   15 statement: CASE expression IS case_list OTHERWISE statement_ ENDCASE ';' •

    $default  reduce using rule 15 (statement)


State 97

   17 statement: FOR IDENTIFIER ASSIGNMENT expression BY expression WHILE expression • DO statement_ END ';'
   27 expression: expression • ANDOP relation

    ANDOP  shift, and go to state 54
    DO     shift, and go to state 98


State 98

   17 statement: FOR IDENTIFIER ASSIGNMENT expression BY expression WHILE expression DO • statement_ END ';'

    error           shift, and go to state 18
    IDENTIFIER      shift, and go to state 19
    INT_LITERAL     shift, and go to state 20
    REAL_LITERAL    shift, and go to state 21
    BOOL_LITERAL    shift, and go to state 22
    REDUCE          shift, and go to state 23
    IF              shift, and go to state 24
    CASE            shift, and go to state 25
    WHILE           shift, and go to state 26
    FOR             shift, and go to state 27
    REPEAT          shift, and go to state 28
    NULL_STATEMENT  shift, and go to state 29
    '('             shift, and go to state 30

    statement_  go to state 99
    statement   go to state 32
    expression  go to state 33
    relation    go to state 34
    term        go to state 35
    factor      go to state 36
    primary     go to state 37


State 99

   17 statement: FOR IDENTIFIER ASSIGNMENT expression BY expression WHILE expression DO statement_ • END ';'

    END  shift, and go to state 100


State 100

   17 statement: FOR IDENTIFIER ASSIGNMENT expression BY expression WHILE expression DO statement_ END • ';'

    ';'  shift, and go to state 101


State 101

   17 statement: FOR IDENTIFIER ASSIGNMENT expression BY expression WHILE expression DO statement_ END ';' •

    $default  reduce using rule 17 (statement)
