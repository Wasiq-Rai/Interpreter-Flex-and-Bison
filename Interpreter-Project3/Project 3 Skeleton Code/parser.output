Terminals unused in grammar

    ASSIGNMENT
    WHILE
    DO
    FOR
    BY
    REPEAT
    UNTIL
    statement_seq
    LOWER_THAN_ELSE
    LOWER_THAN_REDUCE


State 9 conflicts: 1 reduce/reduce
State 51 conflicts: 9 reduce/reduce
State 64 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: ε
    2        | program function

    3 function: function_header optional_variable body

    4 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';'

    5 optional_variable: variable
    6                  | variable optional_variable
    7                  | ε

    8 variable: IDENTIFIER ':' type IS statement ';'

    9 parameters: ε
   10           | parameters_list

   11 parameters_list: parameters_list ',' IDENTIFIER ':' type
   12                | IDENTIFIER ':' type

   13 type: INTEGER
   14     | BOOLEAN
   15     | REAL

   16 body: BEGIN_ statement_ END ';'

   17 statement_: statement ';'
   18           | statement ';' statement_
   19           | error ';'

   20 statement: expression
   21          | REDUCE operator reductions ENDREDUCE
   22          | IF expression THEN statement_ ELSE statement_ ENDIF
   23          | CASE expression IS case_list OTHERWISE ARROW statement_ ENDCASE
   24          | NULL_STATEMENT

   25 expression: relation
   26           | expression ANDOP relation
   27           | expression OROP relation
   28           | NOTOP relation

   29 relation: term
   30         | relation RELOP term

   31 term: factor
   32     | term ADDOP factor

   33 factor: primary
   34       | factor MULOP primary

   35 primary: IDENTIFIER
   36        | INT_LITERAL
   37        | REAL_LITERAL
   38        | BOOL_LITERAL
   39        | '(' expression ')'
   40        | ADDOP primary
   41        | NOTOP primary

   42 reductions: reductions statement_
   43           | ε

   44 operator: ADDOP
   45         | MULOP
   46         | REMOP
   47         | NOTOP
   48         | OROP
   49         | ANDOP
   50         | EXP

   51 case_list: WHEN INT_LITERAL ARROW statement_ case_list
   52          | ε


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 39
    ')' (41) 39
    ',' (44) 11
    ':' (58) 8 11 12
    ';' (59) 4 8 16 17 18 19
    error (256) 19
    IDENTIFIER <iden> (258) 4 8 11 12 35
    INT_LITERAL <value> (259) 36 51
    REAL_LITERAL <realValue> (260) 37
    BOOL_LITERAL <boolValue> (261) 38
    ADDOP <oper> (262) 32 40 44
    MULOP <oper> (263) 34 45
    RELOP <oper> (264) 30
    ANDOP <oper> (265) 26 49
    OROP <oper> (266) 27 48
    NOTOP <oper> (267) 28 41 47
    REMOP <oper> (268) 46
    EXP <oper> (269) 50
    IS (270) 8 23
    BEGIN_ (271) 16
    BOOLEAN (272) 14
    END (273) 16
    ENDREDUCE (274) 21
    FUNCTION (275) 4
    INTEGER (276) 13
    REAL (277) 15
    REDUCE (278) 21
    RETURNS (279) 4
    ASSIGNMENT (280)
    IF (281) 22
    THEN (282) 22
    ELSE (283) 22
    ENDIF (284) 22
    CASE (285) 23
    WHEN (286) 51
    ARROW (287) 23 51
    OTHERWISE (288) 23
    ENDCASE (289) 23
    WHILE (290)
    DO (291)
    FOR (292)
    BY (293)
    REPEAT (294)
    UNTIL (295)
    NULL_STATEMENT (296) 24
    statement_seq (297)
    LOWER_THAN_ELSE (298)
    LOWER_THAN_REDUCE (299)


Nonterminals, with rules where they appear

    $accept (50)
        on left: 0
    program <value> (51)
        on left: 1 2
        on right: 0 2
    function (52)
        on left: 3
        on right: 2
    function_header (53)
        on left: 4
        on right: 3
    optional_variable (54)
        on left: 5 6 7
        on right: 3 6
    variable (55)
        on left: 8
        on right: 5 6
    parameters (56)
        on left: 9 10
        on right: 4
    parameters_list (57)
        on left: 11 12
        on right: 10 11
    type (58)
        on left: 13 14 15
        on right: 4 8 11 12
    body <value> (59)
        on left: 16
        on right: 3
    statement_ <value> (60)
        on left: 17 18 19
        on right: 16 18 22 23 42 51
    statement <value> (61)
        on left: 20 21 22 23 24
        on right: 8 17 18
    expression <value> (62)
        on left: 25 26 27 28
        on right: 20 22 23 26 27 39
    relation <value> (63)
        on left: 29 30
        on right: 25 26 27 28 30
    term <value> (64)
        on left: 31 32
        on right: 29 30 32
    factor <value> (65)
        on left: 33 34
        on right: 31 32 34
    primary <value> (66)
        on left: 35 36 37 38 39 40 41
        on right: 33 34 40 41
    reductions <value> (67)
        on left: 42 43
        on right: 21 42
    operator <oper> (68)
        on left: 44 45 46 47 48 49 50
        on right: 21
    case_list <value> (69)
        on left: 51 52
        on right: 23 51


State 0

    0 $accept: • program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program • $end
    2 program: program • function

    $end      shift, and go to state 2
    FUNCTION  shift, and go to state 3

    function         go to state 4
    function_header  go to state 5


State 2

    0 $accept: program $end •

    $default  accept


State 3

    4 function_header: FUNCTION • IDENTIFIER parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 6


State 4

    2 program: program function •

    $default  reduce using rule 2 (program)


State 5

    3 function: function_header • optional_variable body

    IDENTIFIER  shift, and go to state 7

    $default  reduce using rule 7 (optional_variable)

    optional_variable  go to state 8
    variable           go to state 9


State 6

    4 function_header: FUNCTION IDENTIFIER • parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 9 (parameters)

    parameters       go to state 11
    parameters_list  go to state 12


State 7

    8 variable: IDENTIFIER • ':' type IS statement ';'

    ':'  shift, and go to state 13


State 8

    3 function: function_header optional_variable • body

    BEGIN_  shift, and go to state 14

    body  go to state 15


State 9

    5 optional_variable: variable •
    6                  | variable • optional_variable

    IDENTIFIER  shift, and go to state 7

    BEGIN_    reduce using rule 5 (optional_variable)
    BEGIN_    [reduce using rule 7 (optional_variable)]
    $default  reduce using rule 5 (optional_variable)

    optional_variable  go to state 16
    variable           go to state 9


State 10

   12 parameters_list: IDENTIFIER • ':' type

    ':'  shift, and go to state 17


State 11

    4 function_header: FUNCTION IDENTIFIER parameters • RETURNS type ';'

    RETURNS  shift, and go to state 18


State 12

   10 parameters: parameters_list •
   11 parameters_list: parameters_list • ',' IDENTIFIER ':' type

    ','  shift, and go to state 19

    $default  reduce using rule 10 (parameters)


State 13

    8 variable: IDENTIFIER ':' • type IS statement ';'

    BOOLEAN  shift, and go to state 20
    INTEGER  shift, and go to state 21
    REAL     shift, and go to state 22

    type  go to state 23


State 14

   16 body: BEGIN_ • statement_ END ';'

    error           shift, and go to state 24
    IDENTIFIER      shift, and go to state 25
    INT_LITERAL     shift, and go to state 26
    REAL_LITERAL    shift, and go to state 27
    BOOL_LITERAL    shift, and go to state 28
    ADDOP           shift, and go to state 29
    NOTOP           shift, and go to state 30
    REDUCE          shift, and go to state 31
    IF              shift, and go to state 32
    CASE            shift, and go to state 33
    NULL_STATEMENT  shift, and go to state 34
    '('             shift, and go to state 35

    statement_  go to state 36
    statement   go to state 37
    expression  go to state 38
    relation    go to state 39
    term        go to state 40
    factor      go to state 41
    primary     go to state 42


State 15

    3 function: function_header optional_variable body •

    $default  reduce using rule 3 (function)


State 16

    6 optional_variable: variable optional_variable •

    $default  reduce using rule 6 (optional_variable)


State 17

   12 parameters_list: IDENTIFIER ':' • type

    BOOLEAN  shift, and go to state 20
    INTEGER  shift, and go to state 21
    REAL     shift, and go to state 22

    type  go to state 43


State 18

    4 function_header: FUNCTION IDENTIFIER parameters RETURNS • type ';'

    BOOLEAN  shift, and go to state 20
    INTEGER  shift, and go to state 21
    REAL     shift, and go to state 22

    type  go to state 44


State 19

   11 parameters_list: parameters_list ',' • IDENTIFIER ':' type

    IDENTIFIER  shift, and go to state 45


State 20

   14 type: BOOLEAN •

    $default  reduce using rule 14 (type)


State 21

   13 type: INTEGER •

    $default  reduce using rule 13 (type)


State 22

   15 type: REAL •

    $default  reduce using rule 15 (type)


State 23

    8 variable: IDENTIFIER ':' type • IS statement ';'

    IS  shift, and go to state 46


State 24

   19 statement_: error • ';'

    ';'  shift, and go to state 47


State 25

   35 primary: IDENTIFIER •

    $default  reduce using rule 35 (primary)


State 26

   36 primary: INT_LITERAL •

    $default  reduce using rule 36 (primary)


State 27

   37 primary: REAL_LITERAL •

    $default  reduce using rule 37 (primary)


State 28

   38 primary: BOOL_LITERAL •

    $default  reduce using rule 38 (primary)


State 29

   40 primary: ADDOP • primary

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    ADDOP         shift, and go to state 29
    NOTOP         shift, and go to state 48
    '('           shift, and go to state 35

    primary  go to state 49


State 30

   28 expression: NOTOP • relation
   41 primary: NOTOP • primary

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    ADDOP         shift, and go to state 29
    NOTOP         shift, and go to state 48
    '('           shift, and go to state 35

    relation  go to state 50
    term      go to state 40
    factor    go to state 41
    primary   go to state 51


State 31

   21 statement: REDUCE • operator reductions ENDREDUCE

    ADDOP  shift, and go to state 52
    MULOP  shift, and go to state 53
    ANDOP  shift, and go to state 54
    OROP   shift, and go to state 55
    NOTOP  shift, and go to state 56
    REMOP  shift, and go to state 57
    EXP    shift, and go to state 58

    operator  go to state 59


State 32

   22 statement: IF • expression THEN statement_ ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    ADDOP         shift, and go to state 29
    NOTOP         shift, and go to state 30
    '('           shift, and go to state 35

    expression  go to state 60
    relation    go to state 39
    term        go to state 40
    factor      go to state 41
    primary     go to state 42


State 33

   23 statement: CASE • expression IS case_list OTHERWISE ARROW statement_ ENDCASE

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    ADDOP         shift, and go to state 29
    NOTOP         shift, and go to state 30
    '('           shift, and go to state 35

    expression  go to state 61
    relation    go to state 39
    term        go to state 40
    factor      go to state 41
    primary     go to state 42


State 34

   24 statement: NULL_STATEMENT •

    $default  reduce using rule 24 (statement)


State 35

   39 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    ADDOP         shift, and go to state 29
    NOTOP         shift, and go to state 30
    '('           shift, and go to state 35

    expression  go to state 62
    relation    go to state 39
    term        go to state 40
    factor      go to state 41
    primary     go to state 42


State 36

   16 body: BEGIN_ statement_ • END ';'

    END  shift, and go to state 63


State 37

   17 statement_: statement • ';'
   18           | statement • ';' statement_

    ';'  shift, and go to state 64


State 38

   20 statement: expression •
   26 expression: expression • ANDOP relation
   27           | expression • OROP relation

    ANDOP  shift, and go to state 65
    OROP   shift, and go to state 66

    $default  reduce using rule 20 (statement)


State 39

   25 expression: relation •
   30 relation: relation • RELOP term

    RELOP  shift, and go to state 67

    $default  reduce using rule 25 (expression)


State 40

   29 relation: term •
   32 term: term • ADDOP factor

    ADDOP  shift, and go to state 68

    $default  reduce using rule 29 (relation)


State 41

   31 term: factor •
   34 factor: factor • MULOP primary

    MULOP  shift, and go to state 69

    $default  reduce using rule 31 (term)


State 42

   33 factor: primary •

    $default  reduce using rule 33 (factor)


State 43

   12 parameters_list: IDENTIFIER ':' type •

    $default  reduce using rule 12 (parameters_list)


State 44

    4 function_header: FUNCTION IDENTIFIER parameters RETURNS type • ';'

    ';'  shift, and go to state 70


State 45

   11 parameters_list: parameters_list ',' IDENTIFIER • ':' type

    ':'  shift, and go to state 71


State 46

    8 variable: IDENTIFIER ':' type IS • statement ';'

    IDENTIFIER      shift, and go to state 25
    INT_LITERAL     shift, and go to state 26
    REAL_LITERAL    shift, and go to state 27
    BOOL_LITERAL    shift, and go to state 28
    ADDOP           shift, and go to state 29
    NOTOP           shift, and go to state 30
    REDUCE          shift, and go to state 31
    IF              shift, and go to state 32
    CASE            shift, and go to state 33
    NULL_STATEMENT  shift, and go to state 34
    '('             shift, and go to state 35

    statement   go to state 72
    expression  go to state 38
    relation    go to state 39
    term        go to state 40
    factor      go to state 41
    primary     go to state 42


State 47

   19 statement_: error ';' •

    $default  reduce using rule 19 (statement_)


State 48

   41 primary: NOTOP • primary

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    ADDOP         shift, and go to state 29
    NOTOP         shift, and go to state 48
    '('           shift, and go to state 35

    primary  go to state 73


State 49

   40 primary: ADDOP primary •

    $default  reduce using rule 40 (primary)


State 50

   28 expression: NOTOP relation •
   30 relation: relation • RELOP term

    RELOP  shift, and go to state 67

    $default  reduce using rule 28 (expression)


State 51

   33 factor: primary •
   41 primary: NOTOP primary •

    ADDOP     reduce using rule 33 (factor)
    ADDOP     [reduce using rule 41 (primary)]
    MULOP     reduce using rule 33 (factor)
    MULOP     [reduce using rule 41 (primary)]
    RELOP     reduce using rule 33 (factor)
    RELOP     [reduce using rule 41 (primary)]
    ANDOP     reduce using rule 33 (factor)
    ANDOP     [reduce using rule 41 (primary)]
    OROP      reduce using rule 33 (factor)
    OROP      [reduce using rule 41 (primary)]
    IS        reduce using rule 33 (factor)
    IS        [reduce using rule 41 (primary)]
    THEN      reduce using rule 33 (factor)
    THEN      [reduce using rule 41 (primary)]
    ';'       reduce using rule 33 (factor)
    ';'       [reduce using rule 41 (primary)]
    ')'       reduce using rule 33 (factor)
    ')'       [reduce using rule 41 (primary)]
    $default  reduce using rule 33 (factor)


State 52

   44 operator: ADDOP •

    $default  reduce using rule 44 (operator)


State 53

   45 operator: MULOP •

    $default  reduce using rule 45 (operator)


State 54

   49 operator: ANDOP •

    $default  reduce using rule 49 (operator)


State 55

   48 operator: OROP •

    $default  reduce using rule 48 (operator)


State 56

   47 operator: NOTOP •

    $default  reduce using rule 47 (operator)


State 57

   46 operator: REMOP •

    $default  reduce using rule 46 (operator)


State 58

   50 operator: EXP •

    $default  reduce using rule 50 (operator)


State 59

   21 statement: REDUCE operator • reductions ENDREDUCE

    $default  reduce using rule 43 (reductions)

    reductions  go to state 74


State 60

   22 statement: IF expression • THEN statement_ ELSE statement_ ENDIF
   26 expression: expression • ANDOP relation
   27           | expression • OROP relation

    ANDOP  shift, and go to state 65
    OROP   shift, and go to state 66
    THEN   shift, and go to state 75


State 61

   23 statement: CASE expression • IS case_list OTHERWISE ARROW statement_ ENDCASE
   26 expression: expression • ANDOP relation
   27           | expression • OROP relation

    ANDOP  shift, and go to state 65
    OROP   shift, and go to state 66
    IS     shift, and go to state 76


State 62

   26 expression: expression • ANDOP relation
   27           | expression • OROP relation
   39 primary: '(' expression • ')'

    ANDOP  shift, and go to state 65
    OROP   shift, and go to state 66
    ')'    shift, and go to state 77


State 63

   16 body: BEGIN_ statement_ END • ';'

    ';'  shift, and go to state 78


State 64

   17 statement_: statement ';' •
   18           | statement ';' • statement_

    error           shift, and go to state 24
    IDENTIFIER      shift, and go to state 25
    INT_LITERAL     shift, and go to state 26
    REAL_LITERAL    shift, and go to state 27
    BOOL_LITERAL    shift, and go to state 28
    ADDOP           shift, and go to state 29
    NOTOP           shift, and go to state 30
    REDUCE          shift, and go to state 31
    IF              shift, and go to state 32
    CASE            shift, and go to state 33
    NULL_STATEMENT  shift, and go to state 34
    '('             shift, and go to state 35

    error           [reduce using rule 17 (statement_)]
    IDENTIFIER      [reduce using rule 17 (statement_)]
    INT_LITERAL     [reduce using rule 17 (statement_)]
    REAL_LITERAL    [reduce using rule 17 (statement_)]
    BOOL_LITERAL    [reduce using rule 17 (statement_)]
    ADDOP           [reduce using rule 17 (statement_)]
    NOTOP           [reduce using rule 17 (statement_)]
    END             reduce using rule 17 (statement_)
    ENDREDUCE       reduce using rule 17 (statement_)
    REDUCE          [reduce using rule 17 (statement_)]
    IF              [reduce using rule 17 (statement_)]
    ELSE            reduce using rule 17 (statement_)
    ENDIF           reduce using rule 17 (statement_)
    CASE            [reduce using rule 17 (statement_)]
    WHEN            reduce using rule 17 (statement_)
    OTHERWISE       reduce using rule 17 (statement_)
    ENDCASE         reduce using rule 17 (statement_)
    NULL_STATEMENT  [reduce using rule 17 (statement_)]
    '('             [reduce using rule 17 (statement_)]

    statement_  go to state 79
    statement   go to state 37
    expression  go to state 38
    relation    go to state 39
    term        go to state 40
    factor      go to state 41
    primary     go to state 42


State 65

   26 expression: expression ANDOP • relation

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    ADDOP         shift, and go to state 29
    NOTOP         shift, and go to state 48
    '('           shift, and go to state 35

    relation  go to state 80
    term      go to state 40
    factor    go to state 41
    primary   go to state 42


State 66

   27 expression: expression OROP • relation

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    ADDOP         shift, and go to state 29
    NOTOP         shift, and go to state 48
    '('           shift, and go to state 35

    relation  go to state 81
    term      go to state 40
    factor    go to state 41
    primary   go to state 42


State 67

   30 relation: relation RELOP • term

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    ADDOP         shift, and go to state 29
    NOTOP         shift, and go to state 48
    '('           shift, and go to state 35

    term     go to state 82
    factor   go to state 41
    primary  go to state 42


State 68

   32 term: term ADDOP • factor

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    ADDOP         shift, and go to state 29
    NOTOP         shift, and go to state 48
    '('           shift, and go to state 35

    factor   go to state 83
    primary  go to state 42


State 69

   34 factor: factor MULOP • primary

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    ADDOP         shift, and go to state 29
    NOTOP         shift, and go to state 48
    '('           shift, and go to state 35

    primary  go to state 84


State 70

    4 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';' •

    $default  reduce using rule 4 (function_header)


State 71

   11 parameters_list: parameters_list ',' IDENTIFIER ':' • type

    BOOLEAN  shift, and go to state 20
    INTEGER  shift, and go to state 21
    REAL     shift, and go to state 22

    type  go to state 85


State 72

    8 variable: IDENTIFIER ':' type IS statement • ';'

    ';'  shift, and go to state 86


State 73

   41 primary: NOTOP primary •

    $default  reduce using rule 41 (primary)


State 74

   21 statement: REDUCE operator reductions • ENDREDUCE
   42 reductions: reductions • statement_

    error           shift, and go to state 24
    IDENTIFIER      shift, and go to state 25
    INT_LITERAL     shift, and go to state 26
    REAL_LITERAL    shift, and go to state 27
    BOOL_LITERAL    shift, and go to state 28
    ADDOP           shift, and go to state 29
    NOTOP           shift, and go to state 30
    ENDREDUCE       shift, and go to state 87
    REDUCE          shift, and go to state 31
    IF              shift, and go to state 32
    CASE            shift, and go to state 33
    NULL_STATEMENT  shift, and go to state 34
    '('             shift, and go to state 35

    statement_  go to state 88
    statement   go to state 37
    expression  go to state 38
    relation    go to state 39
    term        go to state 40
    factor      go to state 41
    primary     go to state 42


State 75

   22 statement: IF expression THEN • statement_ ELSE statement_ ENDIF

    error           shift, and go to state 24
    IDENTIFIER      shift, and go to state 25
    INT_LITERAL     shift, and go to state 26
    REAL_LITERAL    shift, and go to state 27
    BOOL_LITERAL    shift, and go to state 28
    ADDOP           shift, and go to state 29
    NOTOP           shift, and go to state 30
    REDUCE          shift, and go to state 31
    IF              shift, and go to state 32
    CASE            shift, and go to state 33
    NULL_STATEMENT  shift, and go to state 34
    '('             shift, and go to state 35

    statement_  go to state 89
    statement   go to state 37
    expression  go to state 38
    relation    go to state 39
    term        go to state 40
    factor      go to state 41
    primary     go to state 42


State 76

   23 statement: CASE expression IS • case_list OTHERWISE ARROW statement_ ENDCASE

    WHEN  shift, and go to state 90

    $default  reduce using rule 52 (case_list)

    case_list  go to state 91


State 77

   39 primary: '(' expression ')' •

    $default  reduce using rule 39 (primary)


State 78

   16 body: BEGIN_ statement_ END ';' •

    $default  reduce using rule 16 (body)


State 79

   18 statement_: statement ';' statement_ •

    $default  reduce using rule 18 (statement_)


State 80

   26 expression: expression ANDOP relation •
   30 relation: relation • RELOP term

    RELOP  shift, and go to state 67

    $default  reduce using rule 26 (expression)


State 81

   27 expression: expression OROP relation •
   30 relation: relation • RELOP term

    RELOP  shift, and go to state 67

    $default  reduce using rule 27 (expression)


State 82

   30 relation: relation RELOP term •
   32 term: term • ADDOP factor

    ADDOP  shift, and go to state 68

    $default  reduce using rule 30 (relation)


State 83

   32 term: term ADDOP factor •
   34 factor: factor • MULOP primary

    MULOP  shift, and go to state 69

    $default  reduce using rule 32 (term)


State 84

   34 factor: factor MULOP primary •

    $default  reduce using rule 34 (factor)


State 85

   11 parameters_list: parameters_list ',' IDENTIFIER ':' type •

    $default  reduce using rule 11 (parameters_list)


State 86

    8 variable: IDENTIFIER ':' type IS statement ';' •

    $default  reduce using rule 8 (variable)


State 87

   21 statement: REDUCE operator reductions ENDREDUCE •

    $default  reduce using rule 21 (statement)


State 88

   42 reductions: reductions statement_ •

    $default  reduce using rule 42 (reductions)


State 89

   22 statement: IF expression THEN statement_ • ELSE statement_ ENDIF

    ELSE  shift, and go to state 92


State 90

   51 case_list: WHEN • INT_LITERAL ARROW statement_ case_list

    INT_LITERAL  shift, and go to state 93


State 91

   23 statement: CASE expression IS case_list • OTHERWISE ARROW statement_ ENDCASE

    OTHERWISE  shift, and go to state 94


State 92

   22 statement: IF expression THEN statement_ ELSE • statement_ ENDIF

    error           shift, and go to state 24
    IDENTIFIER      shift, and go to state 25
    INT_LITERAL     shift, and go to state 26
    REAL_LITERAL    shift, and go to state 27
    BOOL_LITERAL    shift, and go to state 28
    ADDOP           shift, and go to state 29
    NOTOP           shift, and go to state 30
    REDUCE          shift, and go to state 31
    IF              shift, and go to state 32
    CASE            shift, and go to state 33
    NULL_STATEMENT  shift, and go to state 34
    '('             shift, and go to state 35

    statement_  go to state 95
    statement   go to state 37
    expression  go to state 38
    relation    go to state 39
    term        go to state 40
    factor      go to state 41
    primary     go to state 42


State 93

   51 case_list: WHEN INT_LITERAL • ARROW statement_ case_list

    ARROW  shift, and go to state 96


State 94

   23 statement: CASE expression IS case_list OTHERWISE • ARROW statement_ ENDCASE

    ARROW  shift, and go to state 97


State 95

   22 statement: IF expression THEN statement_ ELSE statement_ • ENDIF

    ENDIF  shift, and go to state 98


State 96

   51 case_list: WHEN INT_LITERAL ARROW • statement_ case_list

    error           shift, and go to state 24
    IDENTIFIER      shift, and go to state 25
    INT_LITERAL     shift, and go to state 26
    REAL_LITERAL    shift, and go to state 27
    BOOL_LITERAL    shift, and go to state 28
    ADDOP           shift, and go to state 29
    NOTOP           shift, and go to state 30
    REDUCE          shift, and go to state 31
    IF              shift, and go to state 32
    CASE            shift, and go to state 33
    NULL_STATEMENT  shift, and go to state 34
    '('             shift, and go to state 35

    statement_  go to state 99
    statement   go to state 37
    expression  go to state 38
    relation    go to state 39
    term        go to state 40
    factor      go to state 41
    primary     go to state 42


State 97

   23 statement: CASE expression IS case_list OTHERWISE ARROW • statement_ ENDCASE

    error           shift, and go to state 24
    IDENTIFIER      shift, and go to state 25
    INT_LITERAL     shift, and go to state 26
    REAL_LITERAL    shift, and go to state 27
    BOOL_LITERAL    shift, and go to state 28
    ADDOP           shift, and go to state 29
    NOTOP           shift, and go to state 30
    REDUCE          shift, and go to state 31
    IF              shift, and go to state 32
    CASE            shift, and go to state 33
    NULL_STATEMENT  shift, and go to state 34
    '('             shift, and go to state 35

    statement_  go to state 100
    statement   go to state 37
    expression  go to state 38
    relation    go to state 39
    term        go to state 40
    factor      go to state 41
    primary     go to state 42


State 98

   22 statement: IF expression THEN statement_ ELSE statement_ ENDIF •

    $default  reduce using rule 22 (statement)


State 99

   51 case_list: WHEN INT_LITERAL ARROW statement_ • case_list

    WHEN  shift, and go to state 90

    $default  reduce using rule 52 (case_list)

    case_list  go to state 101


State 100

   23 statement: CASE expression IS case_list OTHERWISE ARROW statement_ • ENDCASE

    ENDCASE  shift, and go to state 102


State 101

   51 case_list: WHEN INT_LITERAL ARROW statement_ case_list •

    $default  reduce using rule 51 (case_list)


State 102

   23 statement: CASE expression IS case_list OTHERWISE ARROW statement_ ENDCASE •

    $default  reduce using rule 23 (statement)
