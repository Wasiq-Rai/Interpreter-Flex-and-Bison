Terminals unused in grammar

    ASSIGNMENT
    WHILE
    DO
    FOR
    BY
    REPEAT
    UNTIL
    statement_seq
    LOWER_THAN_ELSE
    LOWER_THAN_REDUCE


State 9 conflicts: 1 reduce/reduce
State 41 conflicts: 2 shift/reduce
State 51 conflicts: 10 reduce/reduce
State 65 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: ε
    2        | program function

    3 function: function_header optional_variable body

    4 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';'

    5 optional_variable: variable
    6                  | variable optional_variable
    7                  | ε

    8 variable: IDENTIFIER
    9         | IDENTIFIER ':' type IS statement ';'

   10 parameters: ε
   11           | parameters_list

   12 parameters_list: parameters_list ',' IDENTIFIER ':' type
   13                | IDENTIFIER ':' type

   14 type: INTEGER
   15     | BOOLEAN
   16     | REAL

   17 body: BEGIN_ statement_ END ';'

   18 statement_: statement ';'
   19           | statement ';' statement_
   20           | error ';'

   21 statement: expression
   22          | REDUCE operator reductions ENDREDUCE
   23          | IF expression THEN statement_ ELSE statement_ ENDIF
   24          | CASE expression IS case_list OTHERWISE ARROW statement_ ENDCASE
   25          | NULL_STATEMENT

   26 expression: relation
   27           | expression ANDOP relation
   28           | expression OROP relation
   29           | NOTOP relation

   30 relation: term
   31         | relation RELOP term

   32 term: factor
   33     | term ADDOP factor
   34     | term MULOP factor
   35     | term REMOP factor

   36 factor: primary
   37       | factor MULOP primary
   38       | factor REMOP primary

   39 primary: INT_LITERAL
   40        | REAL_LITERAL
   41        | BOOL_LITERAL
   42        | primary EXP primary
   43        | '(' expression ')'
   44        | IDENTIFIER
   45        | ADDOP primary
   46        | NOTOP primary

   47 reductions: reductions statement_
   48           | ε

   49 operator: ADDOP
   50         | MULOP
   51         | REMOP
   52         | RELOP
   53         | NOTOP
   54         | OROP
   55         | ANDOP
   56         | EXP

   57 case_list: WHEN INT_LITERAL ARROW statement_ case_list
   58          | ε


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 43
    ')' (41) 43
    ',' (44) 12
    ':' (58) 9 12 13
    ';' (59) 4 9 17 18 19 20
    error (256) 20
    IDENTIFIER <iden> (258) 4 8 9 12 13 44
    INT_LITERAL <value> (259) 39 57
    REAL_LITERAL <realValue> (260) 40
    BOOL_LITERAL <boolValue> (261) 41
    ADDOP <oper> (262) 33 45 49
    MULOP <oper> (263) 34 37 50
    RELOP <oper> (264) 31 52
    ANDOP <oper> (265) 27 55
    OROP <oper> (266) 28 54
    NOTOP <oper> (267) 29 46 53
    REMOP <oper> (268) 35 38 51
    EXP <oper> (269) 42 56
    IS (270) 9 24
    BEGIN_ (271) 17
    BOOLEAN (272) 15
    END (273) 17
    ENDREDUCE (274) 22
    FUNCTION (275) 4
    INTEGER (276) 14
    REAL (277) 16
    REDUCE (278) 22
    RETURNS (279) 4
    ASSIGNMENT (280)
    IF (281) 23
    THEN (282) 23
    ELSE (283) 23
    ENDIF (284) 23
    CASE <value> (285) 24
    WHEN <value> (286) 57
    ARROW <value> (287) 24 57
    OTHERWISE <value> (288) 24
    ENDCASE (289) 24
    WHILE (290)
    DO (291)
    FOR (292)
    BY (293)
    REPEAT (294)
    UNTIL (295)
    NULL_STATEMENT (296) 25
    statement_seq (297)
    LOWER_THAN_ELSE (298)
    LOWER_THAN_REDUCE (299)


Nonterminals, with rules where they appear

    $accept (50)
        on left: 0
    program <value> (51)
        on left: 1 2
        on right: 0 2
    function (52)
        on left: 3
        on right: 2
    function_header (53)
        on left: 4
        on right: 3
    optional_variable (54)
        on left: 5 6 7
        on right: 3 6
    variable (55)
        on left: 8 9
        on right: 5 6
    parameters (56)
        on left: 10 11
        on right: 4
    parameters_list (57)
        on left: 12 13
        on right: 11 12
    type (58)
        on left: 14 15 16
        on right: 4 9 12 13
    body <value> (59)
        on left: 17
        on right: 3
    statement_ <value> (60)
        on left: 18 19 20
        on right: 17 19 23 24 47 57
    statement <value> (61)
        on left: 21 22 23 24 25
        on right: 9 18 19
    expression <value> (62)
        on left: 26 27 28 29
        on right: 21 23 24 27 28 43
    relation <value> (63)
        on left: 30 31
        on right: 26 27 28 29 31
    term <value> (64)
        on left: 32 33 34 35
        on right: 30 31 33 34 35
    factor <value> (65)
        on left: 36 37 38
        on right: 32 33 34 35 37 38
    primary <value> (66)
        on left: 39 40 41 42 43 44 45 46
        on right: 36 37 38 42 45 46
    reductions <value> (67)
        on left: 47 48
        on right: 22 47
    operator <oper> (68)
        on left: 49 50 51 52 53 54 55 56
        on right: 22
    case_list <value> (69)
        on left: 57 58
        on right: 24 57


State 0

    0 $accept: • program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program • $end
    2 program: program • function

    $end      shift, and go to state 2
    FUNCTION  shift, and go to state 3

    function         go to state 4
    function_header  go to state 5


State 2

    0 $accept: program $end •

    $default  accept


State 3

    4 function_header: FUNCTION • IDENTIFIER parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 6


State 4

    2 program: program function •

    $default  reduce using rule 2 (program)


State 5

    3 function: function_header • optional_variable body

    IDENTIFIER  shift, and go to state 7

    $default  reduce using rule 7 (optional_variable)

    optional_variable  go to state 8
    variable           go to state 9


State 6

    4 function_header: FUNCTION IDENTIFIER • parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 10 (parameters)

    parameters       go to state 11
    parameters_list  go to state 12


State 7

    8 variable: IDENTIFIER •
    9         | IDENTIFIER • ':' type IS statement ';'

    ':'  shift, and go to state 13

    $default  reduce using rule 8 (variable)


State 8

    3 function: function_header optional_variable • body

    BEGIN_  shift, and go to state 14

    body  go to state 15


State 9

    5 optional_variable: variable •
    6                  | variable • optional_variable

    IDENTIFIER  shift, and go to state 7

    BEGIN_    reduce using rule 5 (optional_variable)
    BEGIN_    [reduce using rule 7 (optional_variable)]
    $default  reduce using rule 5 (optional_variable)

    optional_variable  go to state 16
    variable           go to state 9


State 10

   13 parameters_list: IDENTIFIER • ':' type

    ':'  shift, and go to state 17


State 11

    4 function_header: FUNCTION IDENTIFIER parameters • RETURNS type ';'

    RETURNS  shift, and go to state 18


State 12

   11 parameters: parameters_list •
   12 parameters_list: parameters_list • ',' IDENTIFIER ':' type

    ','  shift, and go to state 19

    $default  reduce using rule 11 (parameters)


State 13

    9 variable: IDENTIFIER ':' • type IS statement ';'

    BOOLEAN  shift, and go to state 20
    INTEGER  shift, and go to state 21
    REAL     shift, and go to state 22

    type  go to state 23


State 14

   17 body: BEGIN_ • statement_ END ';'

    error           shift, and go to state 24
    IDENTIFIER      shift, and go to state 25
    INT_LITERAL     shift, and go to state 26
    REAL_LITERAL    shift, and go to state 27
    BOOL_LITERAL    shift, and go to state 28
    ADDOP           shift, and go to state 29
    NOTOP           shift, and go to state 30
    REDUCE          shift, and go to state 31
    IF              shift, and go to state 32
    CASE            shift, and go to state 33
    NULL_STATEMENT  shift, and go to state 34
    '('             shift, and go to state 35

    statement_  go to state 36
    statement   go to state 37
    expression  go to state 38
    relation    go to state 39
    term        go to state 40
    factor      go to state 41
    primary     go to state 42


State 15

    3 function: function_header optional_variable body •

    $default  reduce using rule 3 (function)


State 16

    6 optional_variable: variable optional_variable •

    $default  reduce using rule 6 (optional_variable)


State 17

   13 parameters_list: IDENTIFIER ':' • type

    BOOLEAN  shift, and go to state 20
    INTEGER  shift, and go to state 21
    REAL     shift, and go to state 22

    type  go to state 43


State 18

    4 function_header: FUNCTION IDENTIFIER parameters RETURNS • type ';'

    BOOLEAN  shift, and go to state 20
    INTEGER  shift, and go to state 21
    REAL     shift, and go to state 22

    type  go to state 44


State 19

   12 parameters_list: parameters_list ',' • IDENTIFIER ':' type

    IDENTIFIER  shift, and go to state 45


State 20

   15 type: BOOLEAN •

    $default  reduce using rule 15 (type)


State 21

   14 type: INTEGER •

    $default  reduce using rule 14 (type)


State 22

   16 type: REAL •

    $default  reduce using rule 16 (type)


State 23

    9 variable: IDENTIFIER ':' type • IS statement ';'

    IS  shift, and go to state 46


State 24

   20 statement_: error • ';'

    ';'  shift, and go to state 47


State 25

   44 primary: IDENTIFIER •

    $default  reduce using rule 44 (primary)


State 26

   39 primary: INT_LITERAL •

    $default  reduce using rule 39 (primary)


State 27

   40 primary: REAL_LITERAL •

    $default  reduce using rule 40 (primary)


State 28

   41 primary: BOOL_LITERAL •

    $default  reduce using rule 41 (primary)


State 29

   45 primary: ADDOP • primary

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    ADDOP         shift, and go to state 29
    NOTOP         shift, and go to state 48
    '('           shift, and go to state 35

    primary  go to state 49


State 30

   29 expression: NOTOP • relation
   46 primary: NOTOP • primary

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    ADDOP         shift, and go to state 29
    NOTOP         shift, and go to state 48
    '('           shift, and go to state 35

    relation  go to state 50
    term      go to state 40
    factor    go to state 41
    primary   go to state 51


State 31

   22 statement: REDUCE • operator reductions ENDREDUCE

    ADDOP  shift, and go to state 52
    MULOP  shift, and go to state 53
    RELOP  shift, and go to state 54
    ANDOP  shift, and go to state 55
    OROP   shift, and go to state 56
    NOTOP  shift, and go to state 57
    REMOP  shift, and go to state 58
    EXP    shift, and go to state 59

    operator  go to state 60


State 32

   23 statement: IF • expression THEN statement_ ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    ADDOP         shift, and go to state 29
    NOTOP         shift, and go to state 30
    '('           shift, and go to state 35

    expression  go to state 61
    relation    go to state 39
    term        go to state 40
    factor      go to state 41
    primary     go to state 42


State 33

   24 statement: CASE • expression IS case_list OTHERWISE ARROW statement_ ENDCASE

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    ADDOP         shift, and go to state 29
    NOTOP         shift, and go to state 30
    '('           shift, and go to state 35

    expression  go to state 62
    relation    go to state 39
    term        go to state 40
    factor      go to state 41
    primary     go to state 42


State 34

   25 statement: NULL_STATEMENT •

    $default  reduce using rule 25 (statement)


State 35

   43 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    ADDOP         shift, and go to state 29
    NOTOP         shift, and go to state 30
    '('           shift, and go to state 35

    expression  go to state 63
    relation    go to state 39
    term        go to state 40
    factor      go to state 41
    primary     go to state 42


State 36

   17 body: BEGIN_ statement_ • END ';'

    END  shift, and go to state 64


State 37

   18 statement_: statement • ';'
   19           | statement • ';' statement_

    ';'  shift, and go to state 65


State 38

   21 statement: expression •
   27 expression: expression • ANDOP relation
   28           | expression • OROP relation

    ANDOP  shift, and go to state 66
    OROP   shift, and go to state 67

    $default  reduce using rule 21 (statement)


State 39

   26 expression: relation •
   31 relation: relation • RELOP term

    RELOP  shift, and go to state 68

    $default  reduce using rule 26 (expression)


State 40

   30 relation: term •
   33 term: term • ADDOP factor
   34     | term • MULOP factor
   35     | term • REMOP factor

    ADDOP  shift, and go to state 69
    MULOP  shift, and go to state 70
    REMOP  shift, and go to state 71

    $default  reduce using rule 30 (relation)


State 41

   32 term: factor •
   37 factor: factor • MULOP primary
   38       | factor • REMOP primary

    MULOP  shift, and go to state 72
    REMOP  shift, and go to state 73

    MULOP     [reduce using rule 32 (term)]
    REMOP     [reduce using rule 32 (term)]
    $default  reduce using rule 32 (term)


State 42

   36 factor: primary •
   42 primary: primary • EXP primary

    EXP  shift, and go to state 74

    $default  reduce using rule 36 (factor)


State 43

   13 parameters_list: IDENTIFIER ':' type •

    $default  reduce using rule 13 (parameters_list)


State 44

    4 function_header: FUNCTION IDENTIFIER parameters RETURNS type • ';'

    ';'  shift, and go to state 75


State 45

   12 parameters_list: parameters_list ',' IDENTIFIER • ':' type

    ':'  shift, and go to state 76


State 46

    9 variable: IDENTIFIER ':' type IS • statement ';'

    IDENTIFIER      shift, and go to state 25
    INT_LITERAL     shift, and go to state 26
    REAL_LITERAL    shift, and go to state 27
    BOOL_LITERAL    shift, and go to state 28
    ADDOP           shift, and go to state 29
    NOTOP           shift, and go to state 30
    REDUCE          shift, and go to state 31
    IF              shift, and go to state 32
    CASE            shift, and go to state 33
    NULL_STATEMENT  shift, and go to state 34
    '('             shift, and go to state 35

    statement   go to state 77
    expression  go to state 38
    relation    go to state 39
    term        go to state 40
    factor      go to state 41
    primary     go to state 42


State 47

   20 statement_: error ';' •

    $default  reduce using rule 20 (statement_)


State 48

   46 primary: NOTOP • primary

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    ADDOP         shift, and go to state 29
    NOTOP         shift, and go to state 48
    '('           shift, and go to state 35

    primary  go to state 78


State 49

   42 primary: primary • EXP primary
   45        | ADDOP primary •

    EXP  shift, and go to state 74

    $default  reduce using rule 45 (primary)


State 50

   29 expression: NOTOP relation •
   31 relation: relation • RELOP term

    RELOP  shift, and go to state 68

    $default  reduce using rule 29 (expression)


State 51

   36 factor: primary •
   42 primary: primary • EXP primary
   46        | NOTOP primary •

    EXP  shift, and go to state 74

    ADDOP     reduce using rule 36 (factor)
    ADDOP     [reduce using rule 46 (primary)]
    MULOP     reduce using rule 36 (factor)
    MULOP     [reduce using rule 46 (primary)]
    RELOP     reduce using rule 36 (factor)
    RELOP     [reduce using rule 46 (primary)]
    ANDOP     reduce using rule 36 (factor)
    ANDOP     [reduce using rule 46 (primary)]
    OROP      reduce using rule 36 (factor)
    OROP      [reduce using rule 46 (primary)]
    REMOP     reduce using rule 36 (factor)
    REMOP     [reduce using rule 46 (primary)]
    IS        reduce using rule 36 (factor)
    IS        [reduce using rule 46 (primary)]
    THEN      reduce using rule 36 (factor)
    THEN      [reduce using rule 46 (primary)]
    ';'       reduce using rule 36 (factor)
    ';'       [reduce using rule 46 (primary)]
    ')'       reduce using rule 36 (factor)
    ')'       [reduce using rule 46 (primary)]
    $default  reduce using rule 36 (factor)


State 52

   49 operator: ADDOP •

    $default  reduce using rule 49 (operator)


State 53

   50 operator: MULOP •

    $default  reduce using rule 50 (operator)


State 54

   52 operator: RELOP •

    $default  reduce using rule 52 (operator)


State 55

   55 operator: ANDOP •

    $default  reduce using rule 55 (operator)


State 56

   54 operator: OROP •

    $default  reduce using rule 54 (operator)


State 57

   53 operator: NOTOP •

    $default  reduce using rule 53 (operator)


State 58

   51 operator: REMOP •

    $default  reduce using rule 51 (operator)


State 59

   56 operator: EXP •

    $default  reduce using rule 56 (operator)


State 60

   22 statement: REDUCE operator • reductions ENDREDUCE

    $default  reduce using rule 48 (reductions)

    reductions  go to state 79


State 61

   23 statement: IF expression • THEN statement_ ELSE statement_ ENDIF
   27 expression: expression • ANDOP relation
   28           | expression • OROP relation

    ANDOP  shift, and go to state 66
    OROP   shift, and go to state 67
    THEN   shift, and go to state 80


State 62

   24 statement: CASE expression • IS case_list OTHERWISE ARROW statement_ ENDCASE
   27 expression: expression • ANDOP relation
   28           | expression • OROP relation

    ANDOP  shift, and go to state 66
    OROP   shift, and go to state 67
    IS     shift, and go to state 81


State 63

   27 expression: expression • ANDOP relation
   28           | expression • OROP relation
   43 primary: '(' expression • ')'

    ANDOP  shift, and go to state 66
    OROP   shift, and go to state 67
    ')'    shift, and go to state 82


State 64

   17 body: BEGIN_ statement_ END • ';'

    ';'  shift, and go to state 83


State 65

   18 statement_: statement ';' •
   19           | statement ';' • statement_

    error           shift, and go to state 24
    IDENTIFIER      shift, and go to state 25
    INT_LITERAL     shift, and go to state 26
    REAL_LITERAL    shift, and go to state 27
    BOOL_LITERAL    shift, and go to state 28
    ADDOP           shift, and go to state 29
    NOTOP           shift, and go to state 30
    REDUCE          shift, and go to state 31
    IF              shift, and go to state 32
    CASE            shift, and go to state 33
    NULL_STATEMENT  shift, and go to state 34
    '('             shift, and go to state 35

    error           [reduce using rule 18 (statement_)]
    IDENTIFIER      [reduce using rule 18 (statement_)]
    INT_LITERAL     [reduce using rule 18 (statement_)]
    REAL_LITERAL    [reduce using rule 18 (statement_)]
    BOOL_LITERAL    [reduce using rule 18 (statement_)]
    ADDOP           [reduce using rule 18 (statement_)]
    NOTOP           [reduce using rule 18 (statement_)]
    END             reduce using rule 18 (statement_)
    ENDREDUCE       reduce using rule 18 (statement_)
    REDUCE          [reduce using rule 18 (statement_)]
    IF              [reduce using rule 18 (statement_)]
    ELSE            reduce using rule 18 (statement_)
    ENDIF           reduce using rule 18 (statement_)
    CASE            [reduce using rule 18 (statement_)]
    WHEN            reduce using rule 18 (statement_)
    OTHERWISE       reduce using rule 18 (statement_)
    ENDCASE         reduce using rule 18 (statement_)
    NULL_STATEMENT  [reduce using rule 18 (statement_)]
    '('             [reduce using rule 18 (statement_)]

    statement_  go to state 84
    statement   go to state 37
    expression  go to state 38
    relation    go to state 39
    term        go to state 40
    factor      go to state 41
    primary     go to state 42


State 66

   27 expression: expression ANDOP • relation

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    ADDOP         shift, and go to state 29
    NOTOP         shift, and go to state 48
    '('           shift, and go to state 35

    relation  go to state 85
    term      go to state 40
    factor    go to state 41
    primary   go to state 42


State 67

   28 expression: expression OROP • relation

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    ADDOP         shift, and go to state 29
    NOTOP         shift, and go to state 48
    '('           shift, and go to state 35

    relation  go to state 86
    term      go to state 40
    factor    go to state 41
    primary   go to state 42


State 68

   31 relation: relation RELOP • term

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    ADDOP         shift, and go to state 29
    NOTOP         shift, and go to state 48
    '('           shift, and go to state 35

    term     go to state 87
    factor   go to state 41
    primary  go to state 42


State 69

   33 term: term ADDOP • factor

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    ADDOP         shift, and go to state 29
    NOTOP         shift, and go to state 48
    '('           shift, and go to state 35

    factor   go to state 88
    primary  go to state 42


State 70

   34 term: term MULOP • factor

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    ADDOP         shift, and go to state 29
    NOTOP         shift, and go to state 48
    '('           shift, and go to state 35

    factor   go to state 89
    primary  go to state 42


State 71

   35 term: term REMOP • factor

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    ADDOP         shift, and go to state 29
    NOTOP         shift, and go to state 48
    '('           shift, and go to state 35

    factor   go to state 90
    primary  go to state 42


State 72

   37 factor: factor MULOP • primary

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    ADDOP         shift, and go to state 29
    NOTOP         shift, and go to state 48
    '('           shift, and go to state 35

    primary  go to state 91


State 73

   38 factor: factor REMOP • primary

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    ADDOP         shift, and go to state 29
    NOTOP         shift, and go to state 48
    '('           shift, and go to state 35

    primary  go to state 92


State 74

   42 primary: primary EXP • primary

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    ADDOP         shift, and go to state 29
    NOTOP         shift, and go to state 48
    '('           shift, and go to state 35

    primary  go to state 93


State 75

    4 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';' •

    $default  reduce using rule 4 (function_header)


State 76

   12 parameters_list: parameters_list ',' IDENTIFIER ':' • type

    BOOLEAN  shift, and go to state 20
    INTEGER  shift, and go to state 21
    REAL     shift, and go to state 22

    type  go to state 94


State 77

    9 variable: IDENTIFIER ':' type IS statement • ';'

    ';'  shift, and go to state 95


State 78

   42 primary: primary • EXP primary
   46        | NOTOP primary •

    EXP  shift, and go to state 74

    $default  reduce using rule 46 (primary)


State 79

   22 statement: REDUCE operator reductions • ENDREDUCE
   47 reductions: reductions • statement_

    error           shift, and go to state 24
    IDENTIFIER      shift, and go to state 25
    INT_LITERAL     shift, and go to state 26
    REAL_LITERAL    shift, and go to state 27
    BOOL_LITERAL    shift, and go to state 28
    ADDOP           shift, and go to state 29
    NOTOP           shift, and go to state 30
    ENDREDUCE       shift, and go to state 96
    REDUCE          shift, and go to state 31
    IF              shift, and go to state 32
    CASE            shift, and go to state 33
    NULL_STATEMENT  shift, and go to state 34
    '('             shift, and go to state 35

    statement_  go to state 97
    statement   go to state 37
    expression  go to state 38
    relation    go to state 39
    term        go to state 40
    factor      go to state 41
    primary     go to state 42


State 80

   23 statement: IF expression THEN • statement_ ELSE statement_ ENDIF

    error           shift, and go to state 24
    IDENTIFIER      shift, and go to state 25
    INT_LITERAL     shift, and go to state 26
    REAL_LITERAL    shift, and go to state 27
    BOOL_LITERAL    shift, and go to state 28
    ADDOP           shift, and go to state 29
    NOTOP           shift, and go to state 30
    REDUCE          shift, and go to state 31
    IF              shift, and go to state 32
    CASE            shift, and go to state 33
    NULL_STATEMENT  shift, and go to state 34
    '('             shift, and go to state 35

    statement_  go to state 98
    statement   go to state 37
    expression  go to state 38
    relation    go to state 39
    term        go to state 40
    factor      go to state 41
    primary     go to state 42


State 81

   24 statement: CASE expression IS • case_list OTHERWISE ARROW statement_ ENDCASE

    WHEN  shift, and go to state 99

    $default  reduce using rule 58 (case_list)

    case_list  go to state 100


State 82

   43 primary: '(' expression ')' •

    $default  reduce using rule 43 (primary)


State 83

   17 body: BEGIN_ statement_ END ';' •

    $default  reduce using rule 17 (body)


State 84

   19 statement_: statement ';' statement_ •

    $default  reduce using rule 19 (statement_)


State 85

   27 expression: expression ANDOP relation •
   31 relation: relation • RELOP term

    RELOP  shift, and go to state 68

    $default  reduce using rule 27 (expression)


State 86

   28 expression: expression OROP relation •
   31 relation: relation • RELOP term

    RELOP  shift, and go to state 68

    $default  reduce using rule 28 (expression)


State 87

   31 relation: relation RELOP term •
   33 term: term • ADDOP factor
   34     | term • MULOP factor
   35     | term • REMOP factor

    ADDOP  shift, and go to state 69
    MULOP  shift, and go to state 70
    REMOP  shift, and go to state 71

    $default  reduce using rule 31 (relation)


State 88

   33 term: term ADDOP factor •
   37 factor: factor • MULOP primary
   38       | factor • REMOP primary

    MULOP  shift, and go to state 72
    REMOP  shift, and go to state 73

    $default  reduce using rule 33 (term)


State 89

   34 term: term MULOP factor •
   37 factor: factor • MULOP primary
   38       | factor • REMOP primary

    REMOP  shift, and go to state 73

    $default  reduce using rule 34 (term)


State 90

   35 term: term REMOP factor •
   37 factor: factor • MULOP primary
   38       | factor • REMOP primary

    $default  reduce using rule 35 (term)


State 91

   37 factor: factor MULOP primary •
   42 primary: primary • EXP primary

    EXP  shift, and go to state 74

    $default  reduce using rule 37 (factor)


State 92

   38 factor: factor REMOP primary •
   42 primary: primary • EXP primary

    EXP  shift, and go to state 74

    $default  reduce using rule 38 (factor)


State 93

   42 primary: primary • EXP primary
   42        | primary EXP primary •

    EXP  shift, and go to state 74

    $default  reduce using rule 42 (primary)


State 94

   12 parameters_list: parameters_list ',' IDENTIFIER ':' type •

    $default  reduce using rule 12 (parameters_list)


State 95

    9 variable: IDENTIFIER ':' type IS statement ';' •

    $default  reduce using rule 9 (variable)


State 96

   22 statement: REDUCE operator reductions ENDREDUCE •

    $default  reduce using rule 22 (statement)


State 97

   47 reductions: reductions statement_ •

    $default  reduce using rule 47 (reductions)


State 98

   23 statement: IF expression THEN statement_ • ELSE statement_ ENDIF

    ELSE  shift, and go to state 101


State 99

   57 case_list: WHEN • INT_LITERAL ARROW statement_ case_list

    INT_LITERAL  shift, and go to state 102


State 100

   24 statement: CASE expression IS case_list • OTHERWISE ARROW statement_ ENDCASE

    OTHERWISE  shift, and go to state 103


State 101

   23 statement: IF expression THEN statement_ ELSE • statement_ ENDIF

    error           shift, and go to state 24
    IDENTIFIER      shift, and go to state 25
    INT_LITERAL     shift, and go to state 26
    REAL_LITERAL    shift, and go to state 27
    BOOL_LITERAL    shift, and go to state 28
    ADDOP           shift, and go to state 29
    NOTOP           shift, and go to state 30
    REDUCE          shift, and go to state 31
    IF              shift, and go to state 32
    CASE            shift, and go to state 33
    NULL_STATEMENT  shift, and go to state 34
    '('             shift, and go to state 35

    statement_  go to state 104
    statement   go to state 37
    expression  go to state 38
    relation    go to state 39
    term        go to state 40
    factor      go to state 41
    primary     go to state 42


State 102

   57 case_list: WHEN INT_LITERAL • ARROW statement_ case_list

    ARROW  shift, and go to state 105


State 103

   24 statement: CASE expression IS case_list OTHERWISE • ARROW statement_ ENDCASE

    ARROW  shift, and go to state 106


State 104

   23 statement: IF expression THEN statement_ ELSE statement_ • ENDIF

    ENDIF  shift, and go to state 107


State 105

   57 case_list: WHEN INT_LITERAL ARROW • statement_ case_list

    error           shift, and go to state 24
    IDENTIFIER      shift, and go to state 25
    INT_LITERAL     shift, and go to state 26
    REAL_LITERAL    shift, and go to state 27
    BOOL_LITERAL    shift, and go to state 28
    ADDOP           shift, and go to state 29
    NOTOP           shift, and go to state 30
    REDUCE          shift, and go to state 31
    IF              shift, and go to state 32
    CASE            shift, and go to state 33
    NULL_STATEMENT  shift, and go to state 34
    '('             shift, and go to state 35

    statement_  go to state 108
    statement   go to state 37
    expression  go to state 38
    relation    go to state 39
    term        go to state 40
    factor      go to state 41
    primary     go to state 42


State 106

   24 statement: CASE expression IS case_list OTHERWISE ARROW • statement_ ENDCASE

    error           shift, and go to state 24
    IDENTIFIER      shift, and go to state 25
    INT_LITERAL     shift, and go to state 26
    REAL_LITERAL    shift, and go to state 27
    BOOL_LITERAL    shift, and go to state 28
    ADDOP           shift, and go to state 29
    NOTOP           shift, and go to state 30
    REDUCE          shift, and go to state 31
    IF              shift, and go to state 32
    CASE            shift, and go to state 33
    NULL_STATEMENT  shift, and go to state 34
    '('             shift, and go to state 35

    statement_  go to state 109
    statement   go to state 37
    expression  go to state 38
    relation    go to state 39
    term        go to state 40
    factor      go to state 41
    primary     go to state 42


State 107

   23 statement: IF expression THEN statement_ ELSE statement_ ENDIF •

    $default  reduce using rule 23 (statement)


State 108

   57 case_list: WHEN INT_LITERAL ARROW statement_ • case_list

    WHEN  shift, and go to state 99

    $default  reduce using rule 58 (case_list)

    case_list  go to state 110


State 109

   24 statement: CASE expression IS case_list OTHERWISE ARROW statement_ • ENDCASE

    ENDCASE  shift, and go to state 111


State 110

   57 case_list: WHEN INT_LITERAL ARROW statement_ case_list •

    $default  reduce using rule 57 (case_list)


State 111

   24 statement: CASE expression IS case_list OTHERWISE ARROW statement_ ENDCASE •

    $default  reduce using rule 24 (statement)
